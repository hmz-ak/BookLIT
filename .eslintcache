[{"C:\\express-project\\readers_club_react\\src\\index.js":"1","C:\\express-project\\readers_club_react\\src\\App.js":"2","C:\\express-project\\readers_club_react\\src\\components\\auth\\Login.jsx":"3","C:\\express-project\\readers_club_react\\src\\components\\services\\UserService.jsx":"4","C:\\express-project\\readers_club_react\\src\\components\\services\\GenericService.jsx":"5","C:\\express-project\\readers_club_react\\src\\components\\auth\\Register.jsx":"6","C:\\express-project\\readers_club_react\\src\\components\\LandingPage.jsx":"7","C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ImageSlider.jsx":"8","C:\\express-project\\readers_club_react\\src\\components\\services\\NovelService.jsx":"9","C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ItemsSlider.jsx":"10","C:\\express-project\\readers_club_react\\src\\components\\TextHeading.jsx":"11","C:\\express-project\\readers_club_react\\src\\components\\Footer.jsx":"12","C:\\express-project\\readers_club_react\\src\\components\\services\\ChapterService.jsx":"13","C:\\express-project\\readers_club_react\\src\\components\\services\\GenreService.jsx":"14","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\SingleNovel.jsx":"15","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\NewStory.jsx":"16","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\NewChapter.jsx":"17","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\SingleChapter.jsx":"18","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\Chapters.jsx":"19","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\Genre.jsx":"20","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\GenreSpecificStory.jsx":"21","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\libraries\\Library.jsx":"22","C:\\express-project\\readers_club_react\\src\\components\\services\\LibraryService.jsx":"23","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\UpdateStory.jsx":"24","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\MyStories.jsx":"25","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\UpdateChapter.jsx":"26","C:\\express-project\\readers_club_react\\src\\components\\auth\\Auth.jsx":"27","C:\\express-project\\readers_club_react\\src\\components\\Nav1.jsx":"28"},{"size":219,"mtime":1610042476676,"results":"29","hashOfConfig":"30"},{"size":2174,"mtime":1609944620005,"results":"31","hashOfConfig":"30"},{"size":1965,"mtime":1609340755232,"results":"32","hashOfConfig":"30"},{"size":1166,"mtime":1609059961459,"results":"33","hashOfConfig":"30"},{"size":1781,"mtime":1610687290405,"results":"34","hashOfConfig":"30"},{"size":2094,"mtime":1608974041435,"results":"35","hashOfConfig":"30"},{"size":2780,"mtime":1609948279011,"results":"36","hashOfConfig":"30"},{"size":1798,"mtime":1610045179123,"results":"37","hashOfConfig":"30"},{"size":638,"mtime":1609265774145,"results":"38","hashOfConfig":"30"},{"size":1368,"mtime":1609947956303,"results":"39","hashOfConfig":"30"},{"size":419,"mtime":1609948814274,"results":"40","hashOfConfig":"30"},{"size":1120,"mtime":1609949162754,"results":"41","hashOfConfig":"30"},{"size":609,"mtime":1609268288699,"results":"42","hashOfConfig":"30"},{"size":514,"mtime":1609251717053,"results":"43","hashOfConfig":"30"},{"size":10265,"mtime":1611929543854,"results":"44","hashOfConfig":"30"},{"size":6184,"mtime":1609492412128,"results":"45","hashOfConfig":"30"},{"size":4192,"mtime":1609318865569,"results":"46","hashOfConfig":"30"},{"size":5505,"mtime":1611930455730,"results":"47","hashOfConfig":"30"},{"size":1492,"mtime":1609238748482,"results":"48","hashOfConfig":"30"},{"size":3330,"mtime":1611928835271,"results":"49","hashOfConfig":"30"},{"size":3331,"mtime":1611928852236,"results":"50","hashOfConfig":"30"},{"size":3364,"mtime":1610044065771,"results":"51","hashOfConfig":"30"},{"size":404,"mtime":1609257960599,"results":"52","hashOfConfig":"30"},{"size":6554,"mtime":1609318773877,"results":"53","hashOfConfig":"30"},{"size":3926,"mtime":1610045423277,"results":"54","hashOfConfig":"30"},{"size":4581,"mtime":1609318884443,"results":"55","hashOfConfig":"30"},{"size":346,"mtime":1609318573189,"results":"56","hashOfConfig":"30"},{"size":10099,"mtime":1609929425695,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"ri3n4p",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"60"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\express-project\\readers_club_react\\src\\index.js",[],["130","131"],"C:\\express-project\\readers_club_react\\src\\App.js",["132","133"],"import Nav1 from \"./components/Nav1\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport LandingPage from \"./components/LandingPage\";\nimport Footer from \"./components/Footer\";\nimport SingleNovel from \"./components/readers_club/stories/SingleNovel\";\nimport SingleChapter from \"./components/readers_club/chapters/SingleChapter\";\nimport NewStory from \"./components/readers_club/stories/NewStory\";\nimport NewChapter from \"./components/readers_club/chapters/NewChapter\";\nimport Genre from \"./components/readers_club/genres/Genre\";\nimport GenreSpecificStory from \"./components/readers_club/genres/GenreSpecificStory\";\nimport Library from \"./components/readers_club/libraries/Library\";\nimport UpdateStory from \"./components/readers_club/stories/UpdateStory\";\nimport MyStories from \"./components/readers_club/stories/MyStories\";\nimport UpdateChapter from \"./components/readers_club/chapters/UpdateChapter\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <ToastContainer />\n\n        <Nav1 />\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/genre/:name\" component={GenreSpecificStory} />\n          <Route path=\"/novels/update/:id\" exact component={UpdateStory} />\n          <Route path=\"/chapter/update/:id\" exact component={UpdateChapter} />\n          <Route path=\"/novels/:id\" component={SingleNovel} />\n          <Route path=\"/chapter/:id\" component={SingleChapter} />\n          <Route path=\"/new/chapter/:id\" component={NewChapter} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/library\" component={Library} />\n          <Route path=\"/genre\" component={Genre} />\n          <Route path=\"/newstory\" component={NewStory} />\n          <Route path=\"/mystory\" component={MyStories} />\n          <Route path=\"/\" exact component={LandingPage} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\express-project\\readers_club_react\\src\\components\\auth\\Login.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\services\\UserService.jsx",["134","135"],"import jwtDecode from \"jwt-decode\";\r\nimport GenericService from \"./GenericService\";\r\n\r\nclass UserService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  login = (email, password) =>\r\n    new Promise((resolve, reject) => {\r\n      this.post(\"/users/login\", { email, password })\r\n        .then((token) => {\r\n          localStorage.setItem(\"token\", token);\r\n          resolve(token);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  register = (name, email, password) =>\r\n    this.post(\"/users/register\", { name, email, password });\r\n  logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  isLoggedIn = () => {\r\n    return localStorage.getItem(\"token\") ? true : false;\r\n  };\r\n\r\n  getLoggedInUser = () => {\r\n    try {\r\n      const jwt = localStorage.getItem(\"token\");\r\n      return jwtDecode(jwt);\r\n    } catch (ex) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  isAdmin = () => {\r\n    if (this.isLoggedIn()) {\r\n      if (this.getLoggedInUser().role == \"admin\") return true;\r\n      else return false;\r\n    } else return false;\r\n  };\r\n}\r\nlet userService = new UserService();\r\nexport default userService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\services\\GenericService.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\auth\\Register.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\LandingPage.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ImageSlider.jsx",["136","137"],"import React, { useState } from \"react\";\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst ImageSlider = (props) => {\r\n  const { slides } = props;\r\n  const [current, setCurrent] = useState(0);\r\n  const length = slides.length;\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current === length - 1 ? 0 : current + 1);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current === 0 ? length - 1 : current - 1);\r\n  };\r\n\r\n  if (!Array.isArray(slides) || slides.length <= 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <section className=\"slider\">\r\n      <Grid container>\r\n        <Grid item xs={2} lg={2}>\r\n          <FaArrowAltCircleLeft className=\"left-arrow\" onClick={prevSlide} />\r\n        </Grid>\r\n        <Grid item xs={8} lg={8}>\r\n          {slides.map((slide, index) => {\r\n            return (\r\n              <div\r\n                style={{ cursor: \"pointer\" }}\r\n                key={index}\r\n                className={index === current ? \"slide active\" : \"slide\"}\r\n              >\r\n                {index === current && (\r\n                  <img\r\n                    src={slide.image}\r\n                    alt=\"travel image\"\r\n                    className=\"image\"\r\n                    onClick={(e) => {\r\n                      props.history.push(\"/novels/\" + slide._id);\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Grid item xs={2} lg={3}>\r\n          <FaArrowAltCircleRight className=\"right-arrow\" onClick={nextSlide} />\r\n        </Grid>\r\n      </Grid>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withRouter(ImageSlider);\r\n","C:\\express-project\\readers_club_react\\src\\components\\services\\NovelService.jsx",["138"],"import GenericService from \"./GenericService\";\r\n\r\nclass NovelService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getNovel = () => this.get(\"/api/novels\");\r\n  getSingleNovel = (id) => this.get(\"/api/novels/\" + id);\r\n  addNovel = (formData, config) =>\r\n    this.postData(\"/api/novels\", formData, config);\r\n  deleteNovel = (_id) => this.delete(\"/api/novels/delete/\" + _id);\r\n  updateNovel = (_id, formData, config) =>\r\n    this.putData(\"/api/novels/update/\" + _id, formData, config);\r\n  getStories = () => this.get(\"/api/novels/mystories\");\r\n}\r\n\r\nlet novelService = new NovelService();\r\nexport default novelService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ItemsSlider.jsx",["139"],"import React from \"react\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst breakPoints = [\r\n  { width: 378, itemsToShow: 1 },\r\n  { width: 450, itemsToShow: 2 },\r\n\r\n  { width: 550, itemsToShow: 3, itemsToScroll: 2 },\r\n  { width: 786, itemsToShow: 4 },\r\n  { width: 1200, itemsToShow: 6 },\r\n];\r\n\r\nconst ItemsSlider = (props) => {\r\n  const { items } = props;\r\n  console.log(props);\r\n  return (\r\n    <div>\r\n      <Carousel breakPoints={breakPoints}>\r\n        {items.map((novel, index) => {\r\n          return (\r\n            <div\r\n              style={{ textDecoration: \"none\", cursor: \"pointer\" }}\r\n              key={index}\r\n            >\r\n              <div>\r\n                <img\r\n                  onClick={(e) => {\r\n                    console.log(novel._id);\r\n                    props.history.push(\"/novels/\" + novel._id);\r\n                  }}\r\n                  className=\"image2\"\r\n                  src={novel.image}\r\n                />\r\n              </div>\r\n              <Chip\r\n                size=\"small\"\r\n                label={novel.genre}\r\n                style={{ backgroundColor: \"black\", color: \"white\" }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ItemsSlider);\r\n","C:\\express-project\\readers_club_react\\src\\components\\TextHeading.jsx",["140"],"import { Container, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst TextHeading = ({ text }) => {\r\n  return (\r\n    <div style={{ marginTop: \"40px\" }}>\r\n      <Container>\r\n        <p\r\n          style={{\r\n            fontSize: \"2.5vw\",\r\n            fontWeight: \"700\",\r\n          }}\r\n        >\r\n          {text}\r\n        </p>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextHeading;\r\n","C:\\express-project\\readers_club_react\\src\\components\\Footer.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\services\\ChapterService.jsx",["141"],"import GenericService from \"./GenericService\";\r\n\r\nclass ChapterService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getChapter = () => this.get(\"/api/chapters\");\r\n  getSingleChapter = (id) => this.get(\"/api/chapters/\" + id);\r\n  addChapter = (formData, config) =>\r\n    this.postData(\"/api/chapters\", formData, config);\r\n  deleteChapter = (_id) => this.delete(\"/api/chapters/delete/\" + _id);\r\n  updateChapter = (_id, formData, config) =>\r\n    this.putData(\"/api/chapters/update/\" + _id, formData, config);\r\n}\r\n\r\nlet chapterService = new ChapterService();\r\nexport default chapterService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\services\\GenreService.jsx",["142"],"import GenericService from \"./GenericService\";\r\n\r\nclass GenreService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getGenre = () => this.get(\"/api/genre\");\r\n  getSingleGenre = (name) => this.get(\"/api/genre/\" + name);\r\n  addGenre = (data) => this.post(\"/api/genre\", data);\r\n  deleteGenre = (_id) => this.delete(\"/api/genre/delete/\" + _id);\r\n  updateGenre = (_id, data) => this.put(\"/api/genre/update/\" + _id, data);\r\n}\r\n\r\nlet genreService = new GenreService();\r\nexport default genreService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\SingleNovel.jsx",["143","144","145","146","147","148"],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\NewStory.jsx",["149","150","151","152"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport userService from \"../../services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\nimport genreService from \"../../services/GenreService\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport novelService from \"../../services/NovelService\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"500px\",\r\n  },\r\n  child: {\r\n    width: \"600px\",\r\n  },\r\n}));\r\n\r\nconst NewStory = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [theme, setTheme] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [genre, setGenre] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    genreService\r\n      .getGenre()\r\n      .then((data) => {\r\n        setGenre(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  console.log(selectedGenre);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(selectedGenre);\r\n    if (!selectedGenre == \"\") {\r\n      setLoader(true);\r\n      const formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"genre\", selectedGenre);\r\n      formData.append(\"theme\", theme);\r\n      formData.append(\"image\", file);\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      novelService\r\n        .addNovel(formData, config)\r\n        .then((data) => {\r\n          console.log(data);\r\n          setLoader(false);\r\n          props.history.push(\"/new/chapter/\" + data.novel._id);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      toast.error(\"Select Genre!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Auth>\r\n      <div className={classes.container}>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={6000} //6 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <div className={classes.child}>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"title\"\r\n                fullWidth\r\n                required\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                placeholder=\"Give a name to your story\"\r\n              />{\" \"}\r\n              <br />\r\n              <Button\r\n                style={{ marginTop: \"10px\" }}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                {selectedGenre ? selectedGenre : \"Choose genre\"}\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                required\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                fullWidth\r\n              >\r\n                {genre.map((item, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <MenuItem\r\n                        required\r\n                        width=\"100%\"\r\n                        onClick={(e) => {\r\n                          setSelectedGenre(item.name);\r\n                          handleClose();\r\n                        }}\r\n                      >\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Menu>\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Theme\"\r\n                required\r\n                multiline\r\n                rows={12}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter theme of your story\"\r\n                onChange={(e) => {\r\n                  setTheme(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <input\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setFile(e.target.files[0]);\r\n                }}\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default withRouter(NewStory);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\NewChapter.jsx",["153"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport userService from \"../../services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport chapterService from \"../../services/ChapterService\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"500px\",\r\n  },\r\n  child: {\r\n    width: \"600px\",\r\n  },\r\n}));\r\n\r\nconst NewChapter = (props) => {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n  const id = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    toast.info(\"Add a new chapter\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n    });\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    const formData = new FormData();\r\n    formData.append(\"novel_id\", id);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"image\", file);\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    chapterService\r\n      .addChapter(formData, config)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setLoader(false);\r\n        props.history.push(\"/novels/\" + id);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Auth>\r\n      <div className={classes.container}>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={6000} //6 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <div className={classes.child}>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"title\"\r\n                fullWidth\r\n                required\r\n                value={title}\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n                placeholder=\"Give a title of your Chapter\"\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Content\"\r\n                required\r\n                multiline\r\n                rows={12}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter content of your chapter\"\r\n                onChange={(e) => {\r\n                  setContent(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <input\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setFile(e.target.files[0]);\r\n                }}\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default withRouter(NewChapter);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\SingleChapter.jsx",["154","155","156","157"],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\Chapters.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\Genre.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\GenreSpecificStory.jsx",["158","159","160"],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\libraries\\Library.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\services\\LibraryService.jsx",["161"],"import GenericService from \"./GenericService\";\r\n\r\nclass LibraryService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getLibrary = () => this.get(\"/api/library\");\r\n  addLibrary = (formData) => this.post(\"/api/library\", formData);\r\n  deleteLibrary = (_id) => this.delete(\"/api/library/delete/\" + _id);\r\n}\r\n\r\nlet libraryService = new LibraryService();\r\nexport default libraryService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\UpdateStory.jsx",["162","163","164"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport userService from \"../../services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\nimport genreService from \"../../services/GenreService\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport novelService from \"../../services/NovelService\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"500px\",\r\n  },\r\n  child: {\r\n    width: \"600px\",\r\n  },\r\n}));\r\n\r\nconst UpdateStory = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [theme, setTheme] = useState(\"\");\r\n  const [genre, setGenre] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const id = props.match.params.id;\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    genreService\r\n      .getGenre()\r\n      .then((data) => {\r\n        setGenre(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoader(true);\r\n    novelService\r\n      .getSingleNovel(id)\r\n      .then((data) => {\r\n        console.log(data.novel.theme);\r\n        setName(data.novel.name);\r\n        setTheme(data.novel.theme);\r\n        setSelectedGenre(data.novel.genre);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(selectedGenre);\r\n    if (!selectedGenre == \"\") {\r\n      setLoader(true);\r\n      const formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"genre\", selectedGenre);\r\n      formData.append(\"theme\", theme);\r\n      formData.append(\"image\", file);\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      novelService\r\n        .updateNovel(id, formData, config)\r\n        .then((data) => {\r\n          console.log(data);\r\n          setLoader(false);\r\n          props.history.push(\"/novels/\" + id);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      toast.error(\"Select Genre!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Auth>\r\n      <div className={classes.container}>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={6000} //6 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <div className={classes.child}>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"title\"\r\n                fullWidth\r\n                required\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                placeholder=\"Give a name to your story\"\r\n              />{\" \"}\r\n              <br />\r\n              <Button\r\n                style={{ marginTop: \"10px\" }}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                {selectedGenre ? selectedGenre : \"Choose genre\"}\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                required\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                fullWidth\r\n              >\r\n                {genre.map((item, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <MenuItem\r\n                        required\r\n                        width=\"100%\"\r\n                        onClick={(e) => {\r\n                          setSelectedGenre(item.name);\r\n                          handleClose();\r\n                        }}\r\n                      >\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Menu>\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Theme\"\r\n                required\r\n                multiline\r\n                rows={12}\r\n                fullWidth\r\n                value={theme}\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter theme of your story\"\r\n                onChange={(e) => {\r\n                  setTheme(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <input\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setFile(e.target.files[0]);\r\n                }}\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Update\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default withRouter(UpdateStory);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\MyStories.jsx",["165","166"],"import React, { useEffect, useState } from \"react\";\r\nimport libraryService from \"../../services/LibraryService\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport novelService from \"../../services/NovelService\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    boxShadow:\r\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.4), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n});\r\nconst MyStories = (props) => {\r\n  const [stories, setStories] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    novelService\r\n      .getStories()\r\n      .then((data) => {\r\n        setStories(data);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  console.log(stories);\r\n  return (\r\n    <Auth>\r\n      <div>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={6000} //6 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <Container maxWidth=\"lg\" style={{ marginTop: \"50px\" }}>\r\n            <Grid container spacing={3}>\r\n              {stories.length != 0 ? (\r\n                <>\r\n                  {stories.map((story, index) => {\r\n                    return (\r\n                      <Grid item xs={12} md={4} key={index}>\r\n                        <Card\r\n                          className={classes.root}\r\n                          onClick={(e) => {\r\n                            props.history.push(\"/novels/\" + story._id);\r\n                          }}\r\n                        >\r\n                          <CardActionArea>\r\n                            <CardMedia\r\n                              className={classes.media}\r\n                              image={story.image}\r\n                              title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography style={{ height: \"40px\" }}>\r\n                                {story.name}\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Card>\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n                </>\r\n              ) : (\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    fontSize: \"20px\",\r\n                    marginTop: \"40px\",\r\n                  }}\r\n                >\r\n                  <strong>You have not written any story yet</strong>\r\n                </p>\r\n              )}\r\n            </Grid>\r\n          </Container>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default withRouter(MyStories);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\UpdateChapter.jsx",["167","168"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport userService from \"../../services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport chapterService from \"../../services/ChapterService\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"500px\",\r\n  },\r\n  child: {\r\n    width: \"600px\",\r\n  },\r\n}));\r\n\r\nconst UpdateChapter = (props) => {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n  const id = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    toast.info(\"Update this chapter\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoader(true);\r\n    chapterService\r\n      .getSingleChapter(id)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setTitle(data.chapter.title);\r\n        setContent(data.chapter.content);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    const formData = new FormData();\r\n    formData.append(\"novel_id\", id);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"image\", file);\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    chapterService\r\n      .updateChapter(id, formData, config)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setLoader(false);\r\n        props.history.push(\"/chapter/\" + id);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Auth>\r\n      <div className={classes.container}>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={6000} //6 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <div className={classes.child}>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"title\"\r\n                fullWidth\r\n                required\r\n                value={title}\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n                placeholder=\"Give a title of your Chapter\"\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Content\"\r\n                required\r\n                multiline\r\n                rows={12}\r\n                fullWidth\r\n                value={content}\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter content of your chapter\"\r\n                onChange={(e) => {\r\n                  setContent(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <input\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setFile(e.target.files[0]);\r\n                }}\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default withRouter(UpdateChapter);\r\n","C:\\express-project\\readers_club_react\\src\\components\\auth\\Auth.jsx",["169"],"import React from \"react\";\r\nimport userService from \"../services/UserService\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Auth = (props) => {\r\n  React.useEffect(() => {\r\n    if (!userService.isLoggedIn()) {\r\n      props.history.push(\"/login\");\r\n    }\r\n  }, []);\r\n  return <>{props.children}</>;\r\n};\r\n\r\nexport default withRouter(Auth);\r\n","C:\\express-project\\readers_club_react\\src\\components\\Nav1.jsx",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":4,"column":3,"nodeType":"176","messageId":"177","endLine":4,"endColumn":11},{"ruleId":"174","severity":1,"message":"178","line":9,"column":26,"nodeType":"176","messageId":"177","endLine":9,"endColumn":31},{"ruleId":"179","severity":1,"message":"180","line":5,"column":3,"nodeType":"181","messageId":"182","endLine":7,"endColumn":4},{"ruleId":"183","severity":1,"message":"184","line":42,"column":39,"nodeType":"185","messageId":"186","endLine":42,"endColumn":41},{"ruleId":"174","severity":1,"message":"187","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":39,"column":19,"nodeType":"190","endLine":46,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":4,"column":3,"nodeType":"181","messageId":"182","endLine":6,"endColumn":4},{"ruleId":"191","severity":1,"message":"192","line":28,"column":17,"nodeType":"190","endLine":35,"endColumn":19},{"ruleId":"174","severity":1,"message":"193","line":1,"column":21,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":4,"column":3,"nodeType":"181","messageId":"182","endLine":6,"endColumn":4},{"ruleId":"179","severity":1,"message":"180","line":4,"column":3,"nodeType":"181","messageId":"182","endLine":6,"endColumn":4},{"ruleId":"174","severity":1,"message":"194","line":17,"column":10,"nodeType":"176","messageId":"177","endLine":17,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":43,"column":6,"nodeType":"197","endLine":43,"endColumn":15,"suggestions":"198"},{"ruleId":"183","severity":1,"message":"184","line":109,"column":37,"nodeType":"185","messageId":"186","endLine":109,"endColumn":39},{"ruleId":"183","severity":1,"message":"184","line":134,"column":36,"nodeType":"185","messageId":"186","endLine":134,"endColumn":38},{"ruleId":"183","severity":1,"message":"184","line":187,"column":34,"nodeType":"185","messageId":"186","endLine":187,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":253,"column":31,"nodeType":"185","messageId":"186","endLine":253,"endColumn":33},{"ruleId":"174","severity":1,"message":"199","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":19},{"ruleId":"174","severity":1,"message":"200","line":32,"column":10,"nodeType":"176","messageId":"177","endLine":32,"endColumn":18},{"ruleId":"174","severity":1,"message":"201","line":32,"column":20,"nodeType":"176","messageId":"177","endLine":32,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":60,"column":24,"nodeType":"185","messageId":"186","endLine":60,"endColumn":26},{"ruleId":"174","severity":1,"message":"199","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":19},{"ruleId":"174","severity":1,"message":"202","line":4,"column":3,"nodeType":"176","messageId":"177","endLine":4,"endColumn":10},{"ruleId":"174","severity":1,"message":"203","line":13,"column":8,"nodeType":"176","messageId":"177","endLine":13,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":31,"column":6,"nodeType":"197","endLine":31,"endColumn":8,"suggestions":"204"},{"ruleId":"183","severity":1,"message":"184","line":67,"column":35,"nodeType":"185","messageId":"186","endLine":67,"endColumn":37},{"ruleId":"174","severity":1,"message":"205","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":19},{"ruleId":"174","severity":1,"message":"206","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":14},{"ruleId":"195","severity":1,"message":"207","line":46,"column":6,"nodeType":"197","endLine":46,"endColumn":8,"suggestions":"208"},{"ruleId":"179","severity":1,"message":"180","line":4,"column":3,"nodeType":"181","messageId":"182","endLine":6,"endColumn":4},{"ruleId":"174","severity":1,"message":"199","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":70,"column":6,"nodeType":"197","endLine":70,"endColumn":8,"suggestions":"209"},{"ruleId":"183","severity":1,"message":"184","line":75,"column":24,"nodeType":"185","messageId":"186","endLine":75,"endColumn":26},{"ruleId":"174","severity":1,"message":"210","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":22},{"ruleId":"183","severity":1,"message":"211","line":75,"column":31,"nodeType":"185","messageId":"186","endLine":75,"endColumn":33},{"ruleId":"174","severity":1,"message":"199","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":52,"column":6,"nodeType":"197","endLine":52,"endColumn":8,"suggestions":"212"},{"ruleId":"195","severity":1,"message":"213","line":10,"column":6,"nodeType":"197","endLine":10,"endColumn":8,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Grid' is defined but never used.","'FaWindows' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["217"],"'userService' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'Divider' is defined but never used.","'Chapters' is defined but never used.",["218"],"'CardActions' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'genre'. Either include it or remove the dependency array.",["219"],["220"],"'libraryService' is defined but never used.","Expected '!==' and instead saw '!='.",["221"],"React Hook React.useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"225","fix":"229"},{"desc":"225","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [id, trigger]",{"range":"233","text":"234"},"Update the dependencies array to be: [id]",{"range":"235","text":"236"},"Update the dependencies array to be: [genre]",{"range":"237","text":"238"},{"range":"239","text":"236"},{"range":"240","text":"236"},"Update the dependencies array to be: [props.history]",{"range":"241","text":"242"},[1373,1382],"[id, trigger]",[876,878],"[id]",[1459,1461],"[genre]",[2032,2034],[1504,1506],[267,269],"[props.history]"]