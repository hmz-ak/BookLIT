[{"/home/hamza/Documents/Booklit/BookLIT/src/index.js":"1","/home/hamza/Documents/Booklit/BookLIT/src/App.js":"2","/home/hamza/Documents/Booklit/BookLIT/src/components/LandingPage.jsx":"3","/home/hamza/Documents/Booklit/BookLIT/src/components/Nav1.jsx":"4","/home/hamza/Documents/Booklit/BookLIT/src/components/Footer.jsx":"5","/home/hamza/Documents/Booklit/BookLIT/src/components/auth/Login.jsx":"6","/home/hamza/Documents/Booklit/BookLIT/src/components/auth/Register.jsx":"7","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/stories/NewStory.jsx":"8","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/stories/SingleNovel.jsx":"9","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/stories/MyStories.jsx":"10","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/stories/UpdateStory.jsx":"11","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/chapters/SingleChapter.jsx":"12","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/chapters/NewChapter.jsx":"13","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/chapters/UpdateChapter.jsx":"14","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/genres/GenreSpecificStory.jsx":"15","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/genres/Genre.jsx":"16","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/libraries/Library.jsx":"17","/home/hamza/Documents/Booklit/BookLIT/src/components/TextHeading.jsx":"18","/home/hamza/Documents/Booklit/BookLIT/src/components/imageSlider/ItemsSlider.jsx":"19","/home/hamza/Documents/Booklit/BookLIT/src/components/imageSlider/ImageSlider.jsx":"20","/home/hamza/Documents/Booklit/BookLIT/src/components/services/NovelService.jsx":"21","/home/hamza/Documents/Booklit/BookLIT/src/components/services/UserService.jsx":"22","/home/hamza/Documents/Booklit/BookLIT/src/components/auth/Auth.jsx":"23","/home/hamza/Documents/Booklit/BookLIT/src/components/services/GenreService.jsx":"24","/home/hamza/Documents/Booklit/BookLIT/src/components/services/ChapterService.jsx":"25","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/chapters/Chapters.jsx":"26","/home/hamza/Documents/Booklit/BookLIT/src/components/services/LibraryService.jsx":"27","/home/hamza/Documents/Booklit/BookLIT/src/components/services/GenericService.jsx":"28"},{"size":219,"mtime":1622816644136,"results":"29","hashOfConfig":"30"},{"size":2174,"mtime":1622817414001,"results":"31","hashOfConfig":"30"},{"size":2693,"mtime":1622816644132,"results":"32","hashOfConfig":"30"},{"size":10346,"mtime":1622887134162,"results":"33","hashOfConfig":"30"},{"size":1078,"mtime":1622816644132,"results":"34","hashOfConfig":"30"},{"size":2542,"mtime":1622816644132,"results":"35","hashOfConfig":"30"},{"size":2317,"mtime":1622816644132,"results":"36","hashOfConfig":"30"},{"size":7632,"mtime":1622920579229,"results":"37","hashOfConfig":"30"},{"size":11006,"mtime":1623007238066,"results":"38","hashOfConfig":"30"},{"size":3804,"mtime":1622816644136,"results":"39","hashOfConfig":"30"},{"size":8008,"mtime":1622920556661,"results":"40","hashOfConfig":"30"},{"size":5321,"mtime":1622816644132,"results":"41","hashOfConfig":"30"},{"size":4047,"mtime":1622816644132,"results":"42","hashOfConfig":"30"},{"size":4423,"mtime":1622817180732,"results":"43","hashOfConfig":"30"},{"size":3222,"mtime":1622816644136,"results":"44","hashOfConfig":"30"},{"size":3222,"mtime":1622816644136,"results":"45","hashOfConfig":"30"},{"size":3257,"mtime":1622816644136,"results":"46","hashOfConfig":"30"},{"size":398,"mtime":1622816644132,"results":"47","hashOfConfig":"30"},{"size":1318,"mtime":1622816644132,"results":"48","hashOfConfig":"30"},{"size":1738,"mtime":1622816644132,"results":"49","hashOfConfig":"30"},{"size":619,"mtime":1622816644136,"results":"50","hashOfConfig":"30"},{"size":1118,"mtime":1622816644136,"results":"51","hashOfConfig":"30"},{"size":332,"mtime":1622816644132,"results":"52","hashOfConfig":"30"},{"size":498,"mtime":1622816644136,"results":"53","hashOfConfig":"30"},{"size":591,"mtime":1622816644136,"results":"54","hashOfConfig":"30"},{"size":1443,"mtime":1622816644132,"results":"55","hashOfConfig":"30"},{"size":390,"mtime":1622816644136,"results":"56","hashOfConfig":"30"},{"size":1701,"mtime":1622816894064,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"lkizdi",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"60"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/home/hamza/Documents/Booklit/BookLIT/src/index.js",[],["132","133"],"/home/hamza/Documents/Booklit/BookLIT/src/App.js",["134","135"],"import Nav1 from \"./components/Nav1\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport LandingPage from \"./components/LandingPage\";\nimport Footer from \"./components/Footer\";\nimport SingleNovel from \"./components/readers_club/stories/SingleNovel\";\nimport SingleChapter from \"./components/readers_club/chapters/SingleChapter\";\nimport NewStory from \"./components/readers_club/stories/NewStory\";\nimport NewChapter from \"./components/readers_club/chapters/NewChapter\";\nimport Genre from \"./components/readers_club/genres/Genre\";\nimport GenreSpecificStory from \"./components/readers_club/genres/GenreSpecificStory\";\nimport Library from \"./components/readers_club/libraries/Library\";\nimport UpdateStory from \"./components/readers_club/stories/UpdateStory\";\nimport MyStories from \"./components/readers_club/stories/MyStories\";\nimport UpdateChapter from \"./components/readers_club/chapters/UpdateChapter\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <ToastContainer />\n\n        <Nav1 />\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/genre/:name\" component={GenreSpecificStory} />\n          <Route path=\"/novels/update/:id\" exact component={UpdateStory} />\n          <Route path=\"/chapter/update/:id\" exact component={UpdateChapter} />\n          <Route path=\"/novels/:id\" component={SingleNovel} />\n          <Route path=\"/chapter/:id\" component={SingleChapter} />\n          <Route path=\"/new/chapter/:id\" component={NewChapter} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/library\" component={Library} />\n          <Route path=\"/genre\" component={Genre} />\n          <Route path=\"/newstory\" component={NewStory} />\n          <Route path=\"/mystory\" component={MyStories} />\n          <Route path=\"/\" exact component={LandingPage} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/hamza/Documents/Booklit/BookLIT/src/components/LandingPage.jsx",[],"/home/hamza/Documents/Booklit/BookLIT/src/components/Nav1.jsx",[],"/home/hamza/Documents/Booklit/BookLIT/src/components/Footer.jsx",[],"/home/hamza/Documents/Booklit/BookLIT/src/components/auth/Login.jsx",[],"/home/hamza/Documents/Booklit/BookLIT/src/components/auth/Register.jsx",[],"/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/stories/NewStory.jsx",["136","137","138","139","140"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\nimport userService from \"../../services/UserService\";\nimport { toast } from \"react-toastify\";\nimport genreService from \"../../services/GenreService\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport novelService from \"../../services/NovelService\";\nimport { withRouter } from \"react-router\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Auth from \"../../auth/Auth\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"500px\",\n  },\n  child: {\n    width: \"600px\",\n  },\n}));\n\nconst NewStory = (props) => {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [theme, setTheme] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [genre, setGenre] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [file, setFile] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [paid, setPaid] = useState(false);\n  const [paidValue, setPaidValue] = useState(0);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    genreService\n      .getGenre()\n      .then((data) => {\n        setGenre(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    if (paidValue == \"\") {\n      setPaidValue(0);\n    }\n    console.log(`count changed to ${paidValue}`);\n    console.log(`paid changed to ${paid}`);\n  }, [paidValue, paid]);\n  // console.log(selectedGenre);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(selectedGenre);\n    if (!selectedGenre == \"\") {\n      setLoader(true);\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"genre\", selectedGenre);\n      formData.append(\"theme\", theme);\n      formData.append(\"image\", file);\n      formData.append(\"paid\", paid);\n      formData.append(\"price\", paidValue);\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      novelService\n        .addNovel(formData, config)\n        .then((data) => {\n          console.log(data);\n          setLoader(false);\n          props.history.push(\"/new/chapter/\" + data.novel._id);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      toast.error(\"Select Genre!\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    }\n  };\n\n  return (\n    <Auth>\n      <div className={classes.container}>\n        {loader ? (\n          <Container maxWidth=\"lg\">\n            <Grid container spacing={3}>\n              <Grid\n                item\n                xs={12}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginTop: \"10%\",\n                  marginBottom: \"20%\",\n                }}\n              >\n                <Loader\n                  type=\"ThreeDots\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                  timeout={6000} //6 secs\n                />\n              </Grid>\n            </Grid>\n          </Container>\n        ) : (\n          <div className={classes.child}>\n            <form onSubmit={handleSubmit}>\n              <br />\n              <br />\n              <TextField\n                label=\"title\"\n                fullWidth\n                required\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                placeholder=\"Give a name to your story\"\n              />{\" \"}\n              <br />\n              <Button\n                style={{ marginTop: \"10px\" }}\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                variant=\"outlined\"\n                fullWidth\n              >\n                {selectedGenre ? selectedGenre : \"Choose genre\"}\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                required\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                fullWidth\n              >\n                {genre.map((item, index) => {\n                  return (\n                    <div key={index}>\n                      <MenuItem\n                        required\n                        width=\"100%\"\n                        onClick={(e) => {\n                          setSelectedGenre(item.name);\n                          handleClose();\n                        }}\n                      >\n                        {item.name}\n                      </MenuItem>\n                    </div>\n                  );\n                })}\n              </Menu>\n              <br />\n              <br />\n              <FormControl component=\"fieldset\">\n                <FormGroup aria-label=\"position\" row>\n                  <FormControlLabel\n                    onClick={(e) => {\n                      setPaid(!paid);\n                      console.log(paid);\n                    }}\n                    value={paid}\n                    control={<Switch color=\"primary\" />}\n                    label=\"Paid?\"\n                    labelPlacement=\"start\"\n                  />\n                  {paid ? (\n                    <TextField\n                      style={{ marginLeft: 20 }}\n                      id=\"standard-basic\"\n                      label=\"Enter Amount\"\n                      onChange={(e) => {\n                        setPaidValue(e.target.value);\n\n                        console.log(paidValue);\n                      }}\n                    />\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </FormControl>\n              <br />\n              <br />\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Theme\"\n                required\n                multiline\n                rows={12}\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"Enter theme of your story\"\n                onChange={(e) => {\n                  setTheme(e.target.value);\n                }}\n              />\n              <br />\n              <br />\n              <input\n                accept=\"image/*\"\n                name=\"image\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                multiple\n                type=\"file\"\n                onChange={(e) => {\n                  setFile(e.target.files[0]);\n                }}\n              />{\" \"}\n              <br />\n              <br />\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n            </form>\n          </div>\n        )}\n      </div>\n    </Auth>\n  );\n};\n\nexport default withRouter(NewStory);\n","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/stories/SingleNovel.jsx",["141","142","143","144","145","146","147","148","149","150"],"/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/stories/MyStories.jsx",["151","152"],"import React, { useEffect, useState } from \"react\";\nimport libraryService from \"../../services/LibraryService\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport Card from \"@material-ui/core/Card\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport novelService from \"../../services/NovelService\";\nimport Auth from \"../../auth/Auth\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    boxShadow:\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.4), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    borderRadius: \"10px\",\n  },\n  media: {\n    height: 200,\n  },\n});\nconst MyStories = (props) => {\n  const [stories, setStories] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const classes = useStyles();\n\n  useEffect(() => {\n    novelService\n      .getStories()\n      .then((data) => {\n        setStories(data);\n        setLoader(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  console.log(stories);\n  return (\n    <Auth>\n      <div>\n        {loader ? (\n          <Container maxWidth=\"lg\">\n            <Grid container spacing={3}>\n              <Grid\n                item\n                xs={12}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginTop: \"10%\",\n                  marginBottom: \"20%\",\n                }}\n              >\n                <Loader\n                  type=\"ThreeDots\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                  timeout={6000} //6 secs\n                />\n              </Grid>\n            </Grid>\n          </Container>\n        ) : (\n          <Container maxWidth=\"lg\" style={{ marginTop: \"50px\" }}>\n            <Grid container spacing={3}>\n              {stories.length != 0 ? (\n                <>\n                  {stories.map((story, index) => {\n                    return (\n                      <Grid item xs={12} md={4} key={index}>\n                        <Card\n                          className={classes.root}\n                          onClick={(e) => {\n                            props.history.push(\"/novels/\" + story._id);\n                          }}\n                        >\n                          <CardActionArea>\n                            <CardMedia\n                              className={classes.media}\n                              image={story.image}\n                              title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                              <Typography style={{ height: \"40px\" }}>\n                                {story.name}\n                              </Typography>\n                            </CardContent>\n                          </CardActionArea>\n                        </Card>\n                      </Grid>\n                    );\n                  })}\n                </>\n              ) : (\n                <p\n                  style={{\n                    textAlign: \"center\",\n                    fontSize: \"20px\",\n                    marginTop: \"40px\",\n                  }}\n                >\n                  <strong>You have not written any story yet</strong>\n                </p>\n              )}\n            </Grid>\n          </Container>\n        )}\n      </div>\n    </Auth>\n  );\n};\n\nexport default withRouter(MyStories);\n","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/stories/UpdateStory.jsx",["153","154","155"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\nimport userService from \"../../services/UserService\";\nimport { toast } from \"react-toastify\";\nimport genreService from \"../../services/GenreService\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport novelService from \"../../services/NovelService\";\nimport { withRouter } from \"react-router\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Auth from \"../../auth/Auth\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"500px\",\n  },\n  child: {\n    width: \"600px\",\n  },\n}));\n\nconst UpdateStory = (props) => {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [theme, setTheme] = useState(\"\");\n  const [genre, setGenre] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [file, setFile] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [paid, setPaid] = useState(false);\n  const [paidValue, setPaidValue] = useState(0);\n\n  const id = props.match.params.id;\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    genreService\n      .getGenre()\n      .then((data) => {\n        setGenre(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    setLoader(true);\n    novelService\n      .getSingleNovel(id)\n      .then((data) => {\n        console.log(data.novel.theme);\n        setName(data.novel.name);\n        setTheme(data.novel.theme);\n        setSelectedGenre(data.novel.genre);\n        setPaid(data.novel.paid);\n        setPaidValue(data.novel.price);\n        setLoader(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(`count changed to ${paidValue}`);\n    console.log(`paid changed to ${paid}`);\n  }, [paidValue, paid]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(selectedGenre);\n    if (!selectedGenre == \"\") {\n      setLoader(true);\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"genre\", selectedGenre);\n      formData.append(\"theme\", theme);\n      formData.append(\"image\", file);\n      formData.append(\"paid\", paid);\n      formData.append(\"price\", paidValue);\n\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      novelService\n        .updateNovel(id, formData, config)\n        .then((data) => {\n          console.log(data);\n          setLoader(false);\n          props.history.push(\"/novels/\" + id);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      toast.error(\"Select Genre!\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    }\n  };\n\n  return (\n    <Auth>\n      <div className={classes.container}>\n        {loader ? (\n          <Container maxWidth=\"lg\">\n            <Grid container spacing={3}>\n              <Grid\n                item\n                xs={12}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginTop: \"10%\",\n                  marginBottom: \"20%\",\n                }}\n              >\n                <Loader\n                  type=\"ThreeDots\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                  timeout={6000} //6 secs\n                />\n              </Grid>\n            </Grid>\n          </Container>\n        ) : (\n          <div className={classes.child}>\n            <br />\n            <br />\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label=\"title\"\n                fullWidth\n                required\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                placeholder=\"Give a name to your story\"\n              />{\" \"}\n              <br />\n              <Button\n                style={{ marginTop: \"10px\" }}\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                variant=\"outlined\"\n                fullWidth\n              >\n                {selectedGenre ? selectedGenre : \"Choose genre\"}\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                required\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                fullWidth\n              >\n                {genre.map((item, index) => {\n                  return (\n                    <div key={index}>\n                      <MenuItem\n                        required\n                        width=\"100%\"\n                        onClick={(e) => {\n                          setSelectedGenre(item.name);\n                          handleClose();\n                        }}\n                      >\n                        {item.name}\n                      </MenuItem>\n                    </div>\n                  );\n                })}\n              </Menu>\n              <FormControl component=\"fieldset\">\n                <FormGroup aria-label=\"position\" row>\n                  <FormControlLabel\n                    onClick={(e) => {\n                      setPaid((paid) => !paid);\n                      console.log(paid);\n                    }}\n                    checked={paid}\n                    control={<Switch color=\"primary\" />}\n                    label=\"Paid?\"\n                    labelPlacement=\"start\"\n                  />\n                  {paid ? (\n                    <TextField\n                      style={{ marginLeft: 20 }}\n                      id=\"standard-basic\"\n                      label=\"Enter Amount\"\n                      value={paidValue}\n                      onChange={(e) => {\n                        setPaidValue(e.target.value);\n\n                        console.log(paidValue);\n                      }}\n                    />\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </FormControl>\n              <br />\n              <br />\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Theme\"\n                required\n                multiline\n                rows={12}\n                fullWidth\n                value={theme}\n                variant=\"outlined\"\n                placeholder=\"Enter theme of your story\"\n                onChange={(e) => {\n                  setTheme(e.target.value);\n                }}\n              />\n              <br />\n              <br />\n              <input\n                accept=\"image/*\"\n                name=\"image\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                multiple\n                type=\"file\"\n                onChange={(e) => {\n                  setFile(e.target.files[0]);\n                }}\n              />{\" \"}\n              <br />\n              <br />\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Update\n              </Button>\n            </form>\n          </div>\n        )}\n      </div>\n    </Auth>\n  );\n};\n\nexport default withRouter(UpdateStory);\n","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/chapters/SingleChapter.jsx",["156","157","158","159"],"import {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport chapterService from \"../../services/ChapterService\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport React, { useEffect, useState } from \"react\";\nimport userService from \"../../services/UserService\";\nimport Chapters from \"./Chapters\";\nimport { withRouter } from \"react-router-dom\";\n\nconst SingleChapter = (props) => {\n  const id = props.match.params.id;\n  const [chapter, setChapter] = useState([]);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    chapterService\n      .getSingleChapter(id)\n      .then((data) => {\n        setChapter(data.chapter);\n        setLoader(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <div>\n      {loader ? (\n        <Container maxWidth=\"lg\">\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginTop: \"10%\",\n                marginBottom: \"20%\",\n              }}\n            >\n              <Loader\n                type=\"ThreeDots\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={6000} //6 secs\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      ) : (\n        <>\n          <Grid container>\n            <Grid item xs={4}></Grid>\n            <Grid\n              item\n              xs={4}\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n              {chapter.user_id[0] == userService.getLoggedInUser()._id && (\n                <>\n                  <Button\n                    style={{\n                      marginTop: \"30px\",\n                      backgroundColor: \"goldenrod\",\n                      color: \"white\",\n                      marginRight: \"10px\",\n                    }}\n                    variant=\"contained\"\n                    onClick={(e) => {\n                      props.history.push(\"/chapter/update/\" + chapter._id);\n                    }}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    style={{\n                      marginTop: \"30px\",\n                      backgroundColor: \"indianred\",\n                      color: \"white\",\n                      marginRight: \"10px\",\n                    }}\n                    variant=\"contained\"\n                    onClick={(e) => {\n                      setLoader(true);\n                      chapterService\n                        .deleteChapter(chapter._id)\n                        .then((data) => {\n                          console.log(data);\n                          setLoader(false);\n                          props.history.push(\"/novels/\" + chapter.novel_id[0]);\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                        });\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </>\n              )}\n            </Grid>\n\n            <Grid item xs={4}></Grid>\n          </Grid>\n          <Grid container style={{ marginTop: \"30px\" }}>\n            <Grid item xs={1}></Grid>\n            <Grid\n              item\n              xs={10}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                filter: \"brightness(20%)\",\n                opacity: \"0.9\",\n              }}\n            >\n              <img\n                className=\"image3\"\n                width=\"1280px\"\n                height=\"400px\"\n                src={chapter.image}\n                alt=\"\"\n              />\n            </Grid>\n            <Grid item xs={1}></Grid>\n          </Grid>\n\n          <Grid container>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h3\"\n                component=\"h4\"\n                style={{\n                  position: \"absolute\",\n                  textAlign: \"center\",\n                  top: \"30%\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  color: \"whitesmoke\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                {chapter.title}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={10}>\n              <Container\n                maxWidth=\"lg\"\n                className=\"shadow\"\n                style={{\n                  marginTop: \"40px\",\n                  padding: \"30px\",\n                }}\n              >\n                <Typography\n                  variant=\"h4\"\n                  component=\"h3\"\n                  style={{ lineHeight: 1.8, fontSize: \"25px\" }}\n                >\n                  {chapter.content}\n                </Typography>\n              </Container>\n            </Grid>\n            <Grid item xs={1}></Grid>\n          </Grid>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(SingleChapter);\n","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/chapters/NewChapter.jsx",["160"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\nimport userService from \"../../services/UserService\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport { withRouter } from \"react-router\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport chapterService from \"../../services/ChapterService\";\nimport Auth from \"../../auth/Auth\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"500px\",\n  },\n  child: {\n    width: \"600px\",\n  },\n}));\n\nconst NewChapter = (props) => {\n  const classes = useStyles();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const id = props.match.params.id;\n\n  useEffect(() => {\n    toast.info(\"Add a new chapter\", {\n      position: toast.POSITION.TOP_CENTER,\n    });\n  }, []);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoader(true);\n    const formData = new FormData();\n    formData.append(\"novel_id\", id);\n    formData.append(\"title\", title);\n    formData.append(\"content\", content);\n    formData.append(\"image\", file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n\n    chapterService\n      .addChapter(formData, config)\n      .then((data) => {\n        console.log(data);\n        setLoader(false);\n        props.history.push(\"/novels/\" + id);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Auth>\n      <div className={classes.container}>\n        {loader ? (\n          <Container maxWidth=\"lg\">\n            <Grid container spacing={3}>\n              <Grid\n                item\n                xs={12}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginTop: \"10%\",\n                  marginBottom: \"20%\",\n                }}\n              >\n                <Loader\n                  type=\"ThreeDots\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                  timeout={6000} //6 secs\n                />\n              </Grid>\n            </Grid>\n          </Container>\n        ) : (\n          <div className={classes.child}>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label=\"title\"\n                fullWidth\n                required\n                value={title}\n                onChange={(e) => {\n                  setTitle(e.target.value);\n                }}\n                placeholder=\"Give a title of your Chapter\"\n              />{\" \"}\n              <br />\n              <br />\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Content\"\n                required\n                multiline\n                rows={12}\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"Enter content of your chapter\"\n                onChange={(e) => {\n                  setContent(e.target.value);\n                }}\n              />\n              <br />\n              <br />\n              <input\n                accept=\"image/*\"\n                name=\"image\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                multiple\n                type=\"file\"\n                onChange={(e) => {\n                  setFile(e.target.files[0]);\n                }}\n              />{\" \"}\n              <br />\n              <br />\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n            </form>\n          </div>\n        )}\n      </div>\n    </Auth>\n  );\n};\n\nexport default withRouter(NewChapter);\n","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/chapters/UpdateChapter.jsx",["161","162"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\nimport userService from \"../../services/UserService\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport { withRouter } from \"react-router\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport chapterService from \"../../services/ChapterService\";\nimport Auth from \"../../auth/Auth\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"500px\",\n  },\n  child: {\n    width: \"600px\",\n  },\n}));\n\nconst UpdateChapter = (props) => {\n  const classes = useStyles();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const id = props.match.params.id;\n\n  useEffect(() => {\n    toast.info(\"Update this chapter\", {\n      position: toast.POSITION.TOP_CENTER,\n    });\n  }, []);\n\n  useEffect(() => {\n    setLoader(true);\n    chapterService\n      .getSingleChapter(id)\n      .then((data) => {\n        console.log(data);\n        setTitle(data.chapter.title);\n        setContent(data.chapter.content);\n        setLoader(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoader(true);\n    const formData = new FormData();\n    formData.append(\"novel_id\", id);\n    formData.append(\"title\", title);\n    formData.append(\"content\", content);\n    formData.append(\"image\", file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n\n    chapterService\n      .updateChapter(id, formData, config)\n      .then((data) => {\n        console.log(data);\n        setLoader(false);\n        props.history.push(\"/chapter/\" + id);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Auth>\n      <div className={classes.container}>\n        {loader ? (\n          <Container maxWidth=\"lg\">\n            <Grid container spacing={3}>\n              <Grid\n                item\n                xs={12}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginTop: \"10%\",\n                  marginBottom: \"20%\",\n                }}\n              >\n                <Loader\n                  type=\"ThreeDots\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                  timeout={6000} //6 secs\n                />\n              </Grid>\n            </Grid>\n          </Container>\n        ) : (\n          <div className={classes.child}>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label=\"title\"\n                fullWidth\n                required\n                value={title}\n                onChange={(e) => {\n                  setTitle(e.target.value);\n                }}\n                placeholder=\"Give a title of your Chapter\"\n              />{\" \"}\n              <br />\n              <br />\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Content\"\n                required\n                multiline\n                rows={12}\n                fullWidth\n                value={content}\n                variant=\"outlined\"\n                placeholder=\"Enter content of your chapter\"\n                onChange={(e) => {\n                  setContent(e.target.value);\n                }}\n              />\n              <br />\n              <br />\n              <input\n                accept=\"image/*\"\n                name=\"image\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                multiple\n                type=\"file\"\n                onChange={(e) => {\n                  setFile(e.target.files[0]);\n                }}\n              />{\" \"}\n              <br />\n              <br />\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Update\n              </Button>\n            </form>\n          </div>\n        )}\n      </div>\n    </Auth>\n  );\n};\n\nexport default withRouter(UpdateChapter);\n","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/genres/GenreSpecificStory.jsx",["163","164","165"],"import { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { withRouter } from \"react-router\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useEffect, useState } from \"react\";\nimport genreService from \"../../services/GenreService\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300,\n    boxShadow:\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.4), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    borderRadius: \"10px\",\n  },\n  media: {\n    height: 170,\n  },\n});\nconst GenreSpecificStory = (props) => {\n  const [novels, setNovels] = useState([]);\n  const [loader, setLoader] = useState(true);\n\n  const genre = props.match.params.name;\n  const classes = useStyles();\n\n  useEffect(() => {\n    genreService\n      .getSingleGenre(genre)\n      .then((data) => {\n        console.log(data);\n        setNovels(data);\n        setLoader(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      {loader ? (\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={3}>\n            <Grid\n              item\n              xs={12}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginTop: \"10%\",\n                marginBottom: \"20%\",\n              }}\n            >\n              <Loader\n                type=\"ThreeDots\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={6000} //6 secs\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      ) : (\n        <Container maxWidth=\"lg\" style={{ marginTop: \"50px\" }}>\n          <Grid container spacing={4}>\n            {novels.map((novel, index) => {\n              return (\n                <Grid item xs={6} md={3}>\n                  <Card\n                    className={classes.root}\n                    onClick={(e) => {\n                      props.history.push(\"/novels/\" + novel._id);\n                    }}\n                  >\n                    <CardActionArea>\n                      <CardMedia\n                        className={classes.media}\n                        image={novel.image}\n                        title=\"Contemplative Reptile\"\n                      />\n                      <CardContent>\n                        <Typography style={{ height: \"40px\" }}>\n                          {novel.name}\n                        </Typography>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(GenreSpecificStory);\n","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/genres/Genre.jsx",[],"/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/libraries/Library.jsx",[],"/home/hamza/Documents/Booklit/BookLIT/src/components/TextHeading.jsx",["166"],"import { Container, Grid } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst TextHeading = ({ text }) => {\n  return (\n    <div style={{ marginTop: \"40px\" }}>\n      <Container>\n        <p\n          style={{\n            fontSize: \"2.5vw\",\n            fontWeight: \"700\",\n          }}\n        >\n          {text}\n        </p>\n      </Container>\n    </div>\n  );\n};\n\nexport default TextHeading;\n","/home/hamza/Documents/Booklit/BookLIT/src/components/imageSlider/ItemsSlider.jsx",["167"],"import React from \"react\";\nimport Carousel from \"react-elastic-carousel\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { withRouter } from \"react-router\";\n\nconst breakPoints = [\n  { width: 378, itemsToShow: 1 },\n  { width: 450, itemsToShow: 2 },\n\n  { width: 550, itemsToShow: 3, itemsToScroll: 2 },\n  { width: 786, itemsToShow: 4 },\n  { width: 1200, itemsToShow: 6 },\n];\n\nconst ItemsSlider = (props) => {\n  const { items } = props;\n  console.log(props);\n  return (\n    <div>\n      <Carousel breakPoints={breakPoints}>\n        {items.map((novel, index) => {\n          return (\n            <div\n              style={{ textDecoration: \"none\", cursor: \"pointer\" }}\n              key={index}\n            >\n              <div>\n                <img\n                  onClick={(e) => {\n                    console.log(novel._id);\n                    props.history.push(\"/novels/\" + novel._id);\n                  }}\n                  className=\"image2\"\n                  src={novel.image}\n                />\n              </div>\n              <Chip\n                size=\"small\"\n                label={novel.genre}\n                style={{ backgroundColor: \"black\", color: \"white\" }}\n              />\n            </div>\n          );\n        })}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default withRouter(ItemsSlider);\n","/home/hamza/Documents/Booklit/BookLIT/src/components/imageSlider/ImageSlider.jsx",["168","169"],"import React, { useState } from \"react\";\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { Grid } from \"@material-ui/core\";\n\nconst ImageSlider = (props) => {\n  const { slides } = props;\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"slider\">\n      <Grid container>\n        <Grid item xs={2} lg={2}>\n          <FaArrowAltCircleLeft className=\"left-arrow\" onClick={prevSlide} />\n        </Grid>\n        <Grid item xs={8} lg={8}>\n          {slides.map((slide, index) => {\n            return (\n              <div\n                style={{ cursor: \"pointer\" }}\n                key={index}\n                className={index === current ? \"slide active\" : \"slide\"}\n              >\n                {index === current && (\n                  <img\n                    src={slide.image}\n                    alt=\"travel image\"\n                    className=\"image\"\n                    onClick={(e) => {\n                      props.history.push(\"/novels/\" + slide._id);\n                    }}\n                  />\n                )}\n              </div>\n            );\n          })}\n        </Grid>\n        <Grid item xs={2} lg={3}>\n          <FaArrowAltCircleRight className=\"right-arrow\" onClick={nextSlide} />\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default withRouter(ImageSlider);\n","/home/hamza/Documents/Booklit/BookLIT/src/components/services/NovelService.jsx",["170"],"import GenericService from \"./GenericService\";\n\nclass NovelService extends GenericService {\n  constructor() {\n    super();\n  }\n\n  getNovel = () => this.get(\"/api/novels\");\n  getSingleNovel = (id) => this.get(\"/api/novels/\" + id);\n  addNovel = (formData, config) =>\n    this.postData(\"/api/novels\", formData, config);\n  deleteNovel = (_id) => this.delete(\"/api/novels/delete/\" + _id);\n  updateNovel = (_id, formData, config) =>\n    this.putData(\"/api/novels/update/\" + _id, formData, config);\n  getStories = () => this.get(\"/api/novels/mystories\");\n}\n\nlet novelService = new NovelService();\nexport default novelService;\n","/home/hamza/Documents/Booklit/BookLIT/src/components/services/UserService.jsx",["171","172"],"import jwtDecode from \"jwt-decode\";\nimport GenericService from \"./GenericService\";\n\nclass UserService extends GenericService {\n  constructor() {\n    super();\n  }\n\n  login = (email, password) =>\n    new Promise((resolve, reject) => {\n      this.post(\"/users/login\", { email, password })\n        .then((token) => {\n          localStorage.setItem(\"token\", token);\n          resolve(token);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  register = (name, email, password) =>\n    this.post(\"/users/register\", { name, email, password });\n  logout = () => {\n    localStorage.removeItem(\"token\");\n  };\n\n  isLoggedIn = () => {\n    return localStorage.getItem(\"token\") ? true : false;\n  };\n\n  getLoggedInUser = () => {\n    try {\n      const jwt = localStorage.getItem(\"token\");\n      return jwtDecode(jwt);\n    } catch (ex) {\n      return null;\n    }\n  };\n\n  isAdmin = () => {\n    if (this.isLoggedIn()) {\n      if (this.getLoggedInUser().role == \"admin\") return true;\n      else return false;\n    } else return false;\n  };\n}\nlet userService = new UserService();\nexport default userService;\n","/home/hamza/Documents/Booklit/BookLIT/src/components/auth/Auth.jsx",["173"],"import React from \"react\";\nimport userService from \"../services/UserService\";\nimport { withRouter } from \"react-router\";\n\nconst Auth = (props) => {\n  React.useEffect(() => {\n    if (!userService.isLoggedIn()) {\n      props.history.push(\"/login\");\n    }\n  }, []);\n  return <>{props.children}</>;\n};\n\nexport default withRouter(Auth);\n","/home/hamza/Documents/Booklit/BookLIT/src/components/services/GenreService.jsx",["174"],"import GenericService from \"./GenericService\";\n\nclass GenreService extends GenericService {\n  constructor() {\n    super();\n  }\n\n  getGenre = () => this.get(\"/api/genre\");\n  getSingleGenre = (name) => this.get(\"/api/genre/\" + name);\n  addGenre = (data) => this.post(\"/api/genre\", data);\n  deleteGenre = (_id) => this.delete(\"/api/genre/delete/\" + _id);\n  updateGenre = (_id, data) => this.put(\"/api/genre/update/\" + _id, data);\n}\n\nlet genreService = new GenreService();\nexport default genreService;\n","/home/hamza/Documents/Booklit/BookLIT/src/components/services/ChapterService.jsx",["175"],"import GenericService from \"./GenericService\";\n\nclass ChapterService extends GenericService {\n  constructor() {\n    super();\n  }\n\n  getChapter = () => this.get(\"/api/chapters\");\n  getSingleChapter = (id) => this.get(\"/api/chapters/\" + id);\n  addChapter = (formData, config) =>\n    this.postData(\"/api/chapters\", formData, config);\n  deleteChapter = (_id) => this.delete(\"/api/chapters/delete/\" + _id);\n  updateChapter = (_id, formData, config) =>\n    this.putData(\"/api/chapters/update/\" + _id, formData, config);\n}\n\nlet chapterService = new ChapterService();\nexport default chapterService;\n","/home/hamza/Documents/Booklit/BookLIT/src/components/readers_club/chapters/Chapters.jsx",[],"/home/hamza/Documents/Booklit/BookLIT/src/components/services/LibraryService.jsx",["176"],"import GenericService from \"./GenericService\";\n\nclass LibraryService extends GenericService {\n  constructor() {\n    super();\n  }\n\n  getLibrary = () => this.get(\"/api/library\");\n  addLibrary = (formData) => this.post(\"/api/library\", formData);\n  deleteLibrary = (_id) => this.delete(\"/api/library/delete/\" + _id);\n}\n\nlet libraryService = new LibraryService();\nexport default libraryService;\n","/home/hamza/Documents/Booklit/BookLIT/src/components/services/GenericService.jsx",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":4,"column":3,"nodeType":"183","messageId":"184","endLine":4,"endColumn":11},{"ruleId":"181","severity":1,"message":"185","line":9,"column":26,"nodeType":"183","messageId":"184","endLine":9,"endColumn":31},{"ruleId":"181","severity":1,"message":"186","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":19},{"ruleId":"181","severity":1,"message":"187","line":35,"column":10,"nodeType":"183","messageId":"184","endLine":35,"endColumn":18},{"ruleId":"181","severity":1,"message":"188","line":35,"column":20,"nodeType":"183","messageId":"184","endLine":35,"endColumn":31},{"ruleId":"189","severity":1,"message":"190","line":62,"column":19,"nodeType":"191","messageId":"192","endLine":62,"endColumn":21},{"ruleId":"189","severity":1,"message":"190","line":73,"column":24,"nodeType":"191","messageId":"192","endLine":73,"endColumn":26},{"ruleId":"181","severity":1,"message":"193","line":17,"column":10,"nodeType":"183","messageId":"184","endLine":17,"endColumn":19},{"ruleId":"181","severity":1,"message":"194","line":27,"column":10,"nodeType":"183","messageId":"184","endLine":27,"endColumn":18},{"ruleId":"181","severity":1,"message":"195","line":27,"column":20,"nodeType":"183","messageId":"184","endLine":27,"endColumn":31},{"ruleId":"196","severity":1,"message":"197","line":46,"column":6,"nodeType":"198","endLine":46,"endColumn":15,"suggestions":"199"},{"ruleId":"196","severity":1,"message":"200","line":52,"column":7,"nodeType":"201","endLine":52,"endColumn":40},{"ruleId":"189","severity":1,"message":"190","line":122,"column":30,"nodeType":"191","messageId":"192","endLine":122,"endColumn":32},{"ruleId":"189","severity":1,"message":"190","line":145,"column":37,"nodeType":"191","messageId":"192","endLine":145,"endColumn":39},{"ruleId":"189","severity":1,"message":"190","line":170,"column":36,"nodeType":"191","messageId":"192","endLine":170,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":223,"column":34,"nodeType":"191","messageId":"192","endLine":223,"endColumn":36},{"ruleId":"189","severity":1,"message":"190","line":289,"column":31,"nodeType":"191","messageId":"192","endLine":289,"endColumn":33},{"ruleId":"181","severity":1,"message":"202","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":22},{"ruleId":"189","severity":1,"message":"203","line":75,"column":31,"nodeType":"191","messageId":"192","endLine":75,"endColumn":33},{"ruleId":"181","severity":1,"message":"186","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":77,"column":6,"nodeType":"198","endLine":77,"endColumn":8,"suggestions":"204"},{"ruleId":"189","severity":1,"message":"190","line":87,"column":24,"nodeType":"191","messageId":"192","endLine":87,"endColumn":26},{"ruleId":"181","severity":1,"message":"205","line":4,"column":3,"nodeType":"183","messageId":"184","endLine":4,"endColumn":10},{"ruleId":"181","severity":1,"message":"206","line":13,"column":8,"nodeType":"183","messageId":"184","endLine":13,"endColumn":16},{"ruleId":"196","severity":1,"message":"197","line":31,"column":6,"nodeType":"198","endLine":31,"endColumn":8,"suggestions":"207"},{"ruleId":"189","severity":1,"message":"190","line":67,"column":35,"nodeType":"191","messageId":"192","endLine":67,"endColumn":37},{"ruleId":"181","severity":1,"message":"186","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":19},{"ruleId":"181","severity":1,"message":"186","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":52,"column":6,"nodeType":"198","endLine":52,"endColumn":8,"suggestions":"208"},{"ruleId":"181","severity":1,"message":"209","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":19},{"ruleId":"181","severity":1,"message":"210","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":14},{"ruleId":"196","severity":1,"message":"211","line":46,"column":6,"nodeType":"198","endLine":46,"endColumn":8,"suggestions":"212"},{"ruleId":"181","severity":1,"message":"213","line":1,"column":21,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"215","line":28,"column":17,"nodeType":"216","endLine":35,"endColumn":19},{"ruleId":"181","severity":1,"message":"217","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"218","severity":1,"message":"219","line":39,"column":19,"nodeType":"216","endLine":46,"endColumn":21},{"ruleId":"220","severity":1,"message":"221","line":4,"column":3,"nodeType":"222","messageId":"223","endLine":6,"endColumn":4},{"ruleId":"220","severity":1,"message":"221","line":5,"column":3,"nodeType":"222","messageId":"223","endLine":7,"endColumn":4},{"ruleId":"189","severity":1,"message":"190","line":42,"column":39,"nodeType":"191","messageId":"192","endLine":42,"endColumn":41},{"ruleId":"196","severity":1,"message":"224","line":10,"column":6,"nodeType":"198","endLine":10,"endColumn":8,"suggestions":"225"},{"ruleId":"220","severity":1,"message":"221","line":4,"column":3,"nodeType":"222","messageId":"223","endLine":6,"endColumn":4},{"ruleId":"220","severity":1,"message":"221","line":4,"column":3,"nodeType":"222","messageId":"223","endLine":6,"endColumn":4},{"ruleId":"220","severity":1,"message":"221","line":4,"column":3,"nodeType":"222","messageId":"223","endLine":6,"endColumn":4},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'userService' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FaWindows' is defined but never used.","'trigger2' is assigned a value but never used.","'setTrigger2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["228"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'libraryService' is defined but never used.","Expected '!==' and instead saw '!='.",["229"],"'Divider' is defined but never used.","'Chapters' is defined but never used.",["230"],["231"],"'CardActions' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'genre'. Either include it or remove the dependency array.",["232"],"'Grid' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","React Hook React.useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["233"],"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"236","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [id, trigger]",{"range":"244","text":"245"},"Update the dependencies array to be: [id]",{"range":"246","text":"247"},{"range":"248","text":"247"},{"range":"249","text":"247"},"Update the dependencies array to be: [genre]",{"range":"250","text":"251"},"Update the dependencies array to be: [props.history]",{"range":"252","text":"253"},[1434,1443],"[id, trigger]",[2352,2354],"[id]",[846,848],[1453,1455],[1414,1416],"[genre]",[258,260],"[props.history]"]