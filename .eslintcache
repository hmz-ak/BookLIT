[{"C:\\express-project\\readers_club_react\\src\\index.js":"1","C:\\express-project\\readers_club_react\\src\\App.js":"2","C:\\express-project\\readers_club_react\\src\\components\\NavBar.jsx":"3","C:\\express-project\\readers_club_react\\src\\components\\auth\\Login.jsx":"4","C:\\express-project\\readers_club_react\\src\\components\\services\\UserService.jsx":"5","C:\\express-project\\readers_club_react\\src\\components\\services\\GenericService.jsx":"6","C:\\express-project\\readers_club_react\\src\\components\\auth\\Register.jsx":"7","C:\\express-project\\readers_club_react\\src\\components\\LandingPage.jsx":"8","C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ImageSlider.jsx":"9","C:\\express-project\\readers_club_react\\src\\components\\services\\NovelService.jsx":"10","C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ItemsSlider.jsx":"11","C:\\express-project\\readers_club_react\\src\\components\\TextHeading.jsx":"12","C:\\express-project\\readers_club_react\\src\\components\\Footer.jsx":"13","C:\\express-project\\readers_club_react\\src\\components\\services\\ChapterService.jsx":"14","C:\\express-project\\readers_club_react\\src\\components\\services\\GenreService.jsx":"15","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\SingleNovel.jsx":"16","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\NewStory.jsx":"17","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\NewChapter.jsx":"18","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\SingleChapter.jsx":"19","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\Chapters.jsx":"20","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\Genre.jsx":"21","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\GenreSpecificStory.jsx":"22","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\libraries\\Library.jsx":"23","C:\\express-project\\readers_club_react\\src\\components\\services\\LibraryService.jsx":"24"},{"size":219,"mtime":1608817539578,"results":"25","hashOfConfig":"26"},{"size":1741,"mtime":1609254588908,"results":"27","hashOfConfig":"26"},{"size":4293,"mtime":1609259423162,"results":"28","hashOfConfig":"26"},{"size":1828,"mtime":1608974548363,"results":"29","hashOfConfig":"26"},{"size":1166,"mtime":1609059961459,"results":"30","hashOfConfig":"26"},{"size":1451,"mtime":1609235987817,"results":"31","hashOfConfig":"26"},{"size":2094,"mtime":1608974041435,"results":"32","hashOfConfig":"26"},{"size":2780,"mtime":1609172070394,"results":"33","hashOfConfig":"26"},{"size":1183,"mtime":1609013894283,"results":"34","hashOfConfig":"26"},{"size":548,"mtime":1609236001694,"results":"35","hashOfConfig":"26"},{"size":1382,"mtime":1609053172896,"results":"36","hashOfConfig":"26"},{"size":629,"mtime":1609013775964,"results":"37","hashOfConfig":"26"},{"size":1124,"mtime":1609013126977,"results":"38","hashOfConfig":"26"},{"size":576,"mtime":1609238668284,"results":"39","hashOfConfig":"26"},{"size":514,"mtime":1609251717053,"results":"40","hashOfConfig":"26"},{"size":8211,"mtime":1609259223557,"results":"41","hashOfConfig":"26"},{"size":5924,"mtime":1609238746215,"results":"42","hashOfConfig":"26"},{"size":3980,"mtime":1609258102831,"results":"43","hashOfConfig":"26"},{"size":3137,"mtime":1609238828617,"results":"44","hashOfConfig":"26"},{"size":1492,"mtime":1609238748482,"results":"45","hashOfConfig":"26"},{"size":3149,"mtime":1609255966911,"results":"46","hashOfConfig":"26"},{"size":3324,"mtime":1609256002419,"results":"47","hashOfConfig":"26"},{"size":3152,"mtime":1609255893330,"results":"48","hashOfConfig":"26"},{"size":404,"mtime":1609257960599,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ri3n4p",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\express-project\\readers_club_react\\src\\index.js",[],["108","109"],"C:\\express-project\\readers_club_react\\src\\App.js",["110","111"],"import NavBar from \"./components/NavBar\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport LandingPage from \"./components/LandingPage\";\nimport Footer from \"./components/Footer\";\nimport SingleNovel from \"./components/readers_club/stories/SingleNovel\";\nimport SingleChapter from \"./components/readers_club/chapters/SingleChapter\";\nimport NewStory from \"./components/readers_club/stories/NewStory\";\nimport NewChapter from \"./components/readers_club/chapters/NewChapter\";\nimport Genre from \"./components/readers_club/genres/Genre\";\nimport GenreSpecificStory from \"./components/readers_club/genres/GenreSpecificStory\";\nimport Library from \"./components/readers_club/libraries/Library\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <ToastContainer />\n\n        <NavBar />\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/genre/:name\" component={GenreSpecificStory} />\n          <Route path=\"/novels/:id\" component={SingleNovel} />\n          <Route path=\"/chapter/:id\" component={SingleChapter} />\n          <Route path=\"/new/chapter/:id\" component={NewChapter} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/library\" component={Library} />\n          <Route path=\"/genre\" component={Genre} />\n          <Route path=\"/newstory\" component={NewStory} />\n          <Route path=\"/\" component={LandingPage} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\express-project\\readers_club_react\\src\\components\\NavBar.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\auth\\Login.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\services\\UserService.jsx",["112","113"],"import jwtDecode from \"jwt-decode\";\r\nimport GenericService from \"./GenericService\";\r\n\r\nclass UserService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  login = (email, password) =>\r\n    new Promise((resolve, reject) => {\r\n      this.post(\"/users/login\", { email, password })\r\n        .then((token) => {\r\n          localStorage.setItem(\"token\", token);\r\n          resolve(token);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  register = (name, email, password) =>\r\n    this.post(\"/users/register\", { name, email, password });\r\n  logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  isLoggedIn = () => {\r\n    return localStorage.getItem(\"token\") ? true : false;\r\n  };\r\n\r\n  getLoggedInUser = () => {\r\n    try {\r\n      const jwt = localStorage.getItem(\"token\");\r\n      return jwtDecode(jwt);\r\n    } catch (ex) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  isAdmin = () => {\r\n    if (this.isLoggedIn()) {\r\n      if (this.getLoggedInUser().role == \"admin\") return true;\r\n      else return false;\r\n    } else return false;\r\n  };\r\n}\r\nlet userService = new UserService();\r\nexport default userService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\services\\GenericService.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\auth\\Register.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\LandingPage.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ImageSlider.jsx",["114"],"import React, { useState } from \"react\";\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ImageSlider = ({ slides }) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const length = slides.length;\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current === length - 1 ? 0 : current + 1);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current === 0 ? length - 1 : current - 1);\r\n  };\r\n\r\n  if (!Array.isArray(slides) || slides.length <= 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <section className=\"slider\">\r\n      <FaArrowAltCircleLeft className=\"left-arrow\" onClick={prevSlide} />\r\n      <FaArrowAltCircleRight className=\"right-arrow\" onClick={nextSlide} />\r\n\r\n      {slides.map((slide, index) => {\r\n        return (\r\n          <Link to=\"/\" key={index}>\r\n            <div className={index === current ? \"slide active\" : \"slide\"}>\r\n              {index === current && (\r\n                <img src={slide.image} alt=\"travel image\" className=\"image\" />\r\n              )}\r\n            </div>\r\n          </Link>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ImageSlider;\r\n","C:\\express-project\\readers_club_react\\src\\components\\services\\NovelService.jsx",["115"],"import GenericService from \"./GenericService\";\r\n\r\nclass NovelService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getNovel = () => this.get(\"/api/novels\");\r\n  getSingleNovel = (id) => this.get(\"/api/novels/\" + id);\r\n  addNovel = (formData, config) =>\r\n    this.postData(\"/api/novels\", formData, config);\r\n  deleteNovel = (_id) => this.delete(\"/api/novels/delete/\" + _id);\r\n  updateNovel = (_id, data) => this.put(\"/api/novels/update/\" + _id, data);\r\n}\r\n\r\nlet novelService = new NovelService();\r\nexport default novelService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ItemsSlider.jsx",["116"],"import React from \"react\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst breakPoints = [\r\n  { width: 1, itemsToShow: 1 },\r\n  { width: 550, itemsToShow: 2, itemsToScroll: 2, pagination: false },\r\n  { width: 786, itemsToShow: 4 },\r\n  { width: 1200, itemsToShow: 6 },\r\n];\r\n\r\nconst ItemsSlider = (props) => {\r\n  const { items } = props;\r\n  console.log(props);\r\n  return (\r\n    <div>\r\n      <Carousel breakPoints={breakPoints}>\r\n        {items.map((novel, index) => {\r\n          return (\r\n            <div\r\n              style={{ textDecoration: \"none\", cursor: \"pointer\" }}\r\n              key={index}\r\n            >\r\n              <div>\r\n                <img\r\n                  onClick={(e) => {\r\n                    console.log(novel._id);\r\n                    props.history.push(\"/novels/\" + novel._id);\r\n                  }}\r\n                  height=\"310px\"\r\n                  className=\"image2\"\r\n                  src={novel.image}\r\n                />\r\n              </div>\r\n              <Chip\r\n                size=\"small\"\r\n                label={novel.genre}\r\n                style={{ backgroundColor: \"black\", color: \"white\" }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ItemsSlider);\r\n","C:\\express-project\\readers_club_react\\src\\components\\TextHeading.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\Footer.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\services\\ChapterService.jsx",["117"],"import GenericService from \"./GenericService\";\r\n\r\nclass ChapterService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getChapter = () => this.get(\"/api/chapters\");\r\n  getSingleChapter = (id) => this.get(\"/api/chapters/\" + id);\r\n  addChapter = (formData, config) =>\r\n    this.postData(\"/api/chapters\", formData, config);\r\n  deleteChapter = (_id) => this.delete(\"/api/chapters/delete/\" + _id);\r\n  updateChapter = (_id, data) => this.put(\"/api/chapters/update/\" + _id, data);\r\n}\r\n\r\nlet chapterService = new ChapterService();\r\nexport default chapterService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\services\\GenreService.jsx",["118"],"import GenericService from \"./GenericService\";\r\n\r\nclass GenreService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getGenre = () => this.get(\"/api/genre\");\r\n  getSingleGenre = (name) => this.get(\"/api/genre/\" + name);\r\n  addGenre = (data) => this.post(\"/api/genre\", data);\r\n  deleteGenre = (_id) => this.delete(\"/api/genre/delete/\" + _id);\r\n  updateGenre = (_id, data) => this.put(\"/api/genre/update/\" + _id, data);\r\n}\r\n\r\nlet genreService = new GenreService();\r\nexport default genreService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\SingleNovel.jsx",["119","120","121","122","123"],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\NewStory.jsx",["124","125","126","127"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport userService from \"../../services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\nimport genreService from \"../../services/GenreService\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport novelService from \"../../services/NovelService\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"500px\",\r\n  },\r\n  child: {\r\n    width: \"600px\",\r\n  },\r\n}));\r\n\r\nconst NewStory = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [theme, setTheme] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [genre, setGenre] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    genreService\r\n      .getGenre()\r\n      .then((data) => {\r\n        setGenre(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  console.log(selectedGenre);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(selectedGenre);\r\n    if (!selectedGenre == \"\") {\r\n      setLoader(true);\r\n      const formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"genre\", selectedGenre);\r\n      formData.append(\"theme\", theme);\r\n      formData.append(\"image\", file);\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      novelService\r\n        .addNovel(formData, config)\r\n        .then((data) => {\r\n          console.log(data);\r\n          setLoader(false);\r\n          props.history.push(\"/new/chapter/\" + data.novel._id);\r\n          console.log();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      toast.error(\"Select Genre!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {loader ? (\r\n        <Container maxWidth=\"lg\">\r\n          <Grid container spacing={3}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"10%\",\r\n                marginBottom: \"20%\",\r\n              }}\r\n            >\r\n              <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={6000} //6 secs\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      ) : (\r\n        <div className={classes.child}>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              label=\"title\"\r\n              fullWidth\r\n              required\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n              placeholder=\"Give a name to your story\"\r\n            />{\" \"}\r\n            <br />\r\n            <Button\r\n              style={{ marginTop: \"10px\" }}\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {selectedGenre ? selectedGenre : \"Choose genre\"}\r\n            </Button>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              required\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n              fullWidth\r\n            >\r\n              {genre.map((item, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <MenuItem\r\n                      required\r\n                      width=\"100%\"\r\n                      onClick={(e) => {\r\n                        setSelectedGenre(item.name);\r\n                        handleClose();\r\n                      }}\r\n                    >\r\n                      {item.name}\r\n                    </MenuItem>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Menu>\r\n            <br />\r\n            <br />\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              label=\"Theme\"\r\n              required\r\n              multiline\r\n              rows={12}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"Enter theme of your story\"\r\n              onChange={(e) => {\r\n                setTheme(e.target.value);\r\n              }}\r\n            />\r\n            <br />\r\n            <br />\r\n            <input\r\n              accept=\"image/*\"\r\n              name=\"image\"\r\n              className={classes.input}\r\n              id=\"contained-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                setFile(e.target.files[0]);\r\n              }}\r\n            />{\" \"}\r\n            <br />\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(NewStory);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\NewChapter.jsx",["128"],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\SingleChapter.jsx",["129","130"],"import { Container, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport chapterService from \"../../services/ChapterService\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst SingleChapter = (props) => {\r\n  const id = props.match.params.id;\r\n  const [chapter, setChapter] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    chapterService\r\n      .getSingleChapter(id)\r\n      .then((data) => {\r\n        setChapter(data.chapter);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loader ? (\r\n        <Container maxWidth=\"lg\">\r\n          <Grid container spacing={3}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"10%\",\r\n                marginBottom: \"20%\",\r\n              }}\r\n            >\r\n              <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={6000} //6 secs\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      ) : (\r\n        <>\r\n          <Grid container spacing={3} style={{ marginTop: \"30px\" }}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                filter: \"brightness(20%)\",\r\n                opacity: \"0.9\",\r\n              }}\r\n            >\r\n              <img\r\n                className=\"image3\"\r\n                width=\"1280px\"\r\n                height=\"400px\"\r\n                src={chapter.image}\r\n                alt=\"\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant=\"h3\"\r\n                component=\"h4\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  textAlign: \"center\",\r\n                  bottom: \"30%\",\r\n                  width: \"100%\",\r\n                  color: \"whitesmoke\",\r\n\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {chapter.title}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Container\r\n            maxWidth=\"lg\"\r\n            className=\"shadow\"\r\n            style={{\r\n              marginTop: \"40px\",\r\n              padding: \"30px\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"h3\"\r\n              style={{ lineHeight: 1.8, fontSize: \"25px\" }}\r\n            >\r\n              {chapter.content}\r\n            </Typography>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleChapter;\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\Chapters.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\Genre.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\GenreSpecificStory.jsx",["131","132","133"],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\libraries\\Library.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\services\\LibraryService.jsx",["134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":4,"column":3,"nodeType":"141","messageId":"142","endLine":4,"endColumn":11},{"ruleId":"139","severity":1,"message":"143","line":9,"column":26,"nodeType":"141","messageId":"142","endLine":9,"endColumn":31},{"ruleId":"144","severity":1,"message":"145","line":5,"column":3,"nodeType":"146","messageId":"147","endLine":7,"endColumn":4},{"ruleId":"148","severity":1,"message":"149","line":42,"column":39,"nodeType":"150","messageId":"151","endLine":42,"endColumn":41},{"ruleId":"152","severity":1,"message":"153","line":31,"column":17,"nodeType":"154","endLine":31,"endColumn":79},{"ruleId":"144","severity":1,"message":"145","line":4,"column":3,"nodeType":"146","messageId":"147","endLine":6,"endColumn":4},{"ruleId":"155","severity":1,"message":"156","line":26,"column":17,"nodeType":"154","endLine":34,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":4,"column":3,"nodeType":"146","messageId":"147","endLine":6,"endColumn":4},{"ruleId":"144","severity":1,"message":"145","line":4,"column":3,"nodeType":"146","messageId":"147","endLine":6,"endColumn":4},{"ruleId":"157","severity":1,"message":"158","line":40,"column":6,"nodeType":"159","endLine":40,"endColumn":15,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"149","line":102,"column":35,"nodeType":"150","messageId":"151","endLine":102,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":126,"column":34,"nodeType":"150","messageId":"151","endLine":126,"endColumn":36},{"ruleId":"148","severity":1,"message":"149","line":173,"column":32,"nodeType":"150","messageId":"151","endLine":173,"endColumn":34},{"ruleId":"148","severity":1,"message":"149","line":216,"column":29,"nodeType":"150","messageId":"151","endLine":216,"endColumn":31},{"ruleId":"139","severity":1,"message":"161","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":19},{"ruleId":"139","severity":1,"message":"162","line":31,"column":10,"nodeType":"141","messageId":"142","endLine":31,"endColumn":18},{"ruleId":"139","severity":1,"message":"163","line":31,"column":20,"nodeType":"141","messageId":"142","endLine":31,"endColumn":31},{"ruleId":"148","severity":1,"message":"149","line":59,"column":24,"nodeType":"150","messageId":"151","endLine":59,"endColumn":26},{"ruleId":"139","severity":1,"message":"161","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":19},{"ruleId":"139","severity":1,"message":"164","line":1,"column":21,"nodeType":"141","messageId":"142","endLine":1,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":22,"column":6,"nodeType":"159","endLine":22,"endColumn":8,"suggestions":"165"},{"ruleId":"139","severity":1,"message":"166","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":19},{"ruleId":"139","severity":1,"message":"167","line":9,"column":8,"nodeType":"141","messageId":"142","endLine":9,"endColumn":14},{"ruleId":"157","severity":1,"message":"168","line":46,"column":6,"nodeType":"159","endLine":46,"endColumn":8,"suggestions":"169"},{"ruleId":"144","severity":1,"message":"145","line":4,"column":3,"nodeType":"146","messageId":"147","endLine":6,"endColumn":4},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'userService' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'Divider' is defined but never used.",["173"],"'CardActions' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'genre'. Either include it or remove the dependency array.",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [id, trigger]",{"range":"181","text":"182"},"Update the dependencies array to be: [id]",{"range":"183","text":"184"},"Update the dependencies array to be: [genre]",{"range":"185","text":"186"},[1250,1259],"[id, trigger]",[712,714],"[id]",[1459,1461],"[genre]"]