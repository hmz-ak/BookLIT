[{"C:\\express-project\\readers_club_react\\src\\index.js":"1","C:\\express-project\\readers_club_react\\src\\App.js":"2","C:\\express-project\\readers_club_react\\src\\components\\auth\\Login.jsx":"3","C:\\express-project\\readers_club_react\\src\\components\\services\\UserService.jsx":"4","C:\\express-project\\readers_club_react\\src\\components\\services\\GenericService.jsx":"5","C:\\express-project\\readers_club_react\\src\\components\\auth\\Register.jsx":"6","C:\\express-project\\readers_club_react\\src\\components\\LandingPage.jsx":"7","C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ImageSlider.jsx":"8","C:\\express-project\\readers_club_react\\src\\components\\services\\NovelService.jsx":"9","C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ItemsSlider.jsx":"10","C:\\express-project\\readers_club_react\\src\\components\\TextHeading.jsx":"11","C:\\express-project\\readers_club_react\\src\\components\\Footer.jsx":"12","C:\\express-project\\readers_club_react\\src\\components\\services\\ChapterService.jsx":"13","C:\\express-project\\readers_club_react\\src\\components\\services\\GenreService.jsx":"14","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\SingleNovel.jsx":"15","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\NewStory.jsx":"16","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\NewChapter.jsx":"17","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\SingleChapter.jsx":"18","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\Chapters.jsx":"19","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\Genre.jsx":"20","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\GenreSpecificStory.jsx":"21","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\libraries\\Library.jsx":"22","C:\\express-project\\readers_club_react\\src\\components\\services\\LibraryService.jsx":"23","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\UpdateStory.jsx":"24","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\MyStories.jsx":"25","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\UpdateChapter.jsx":"26","C:\\express-project\\readers_club_react\\src\\components\\auth\\Auth.jsx":"27","C:\\express-project\\readers_club_react\\src\\components\\Nav1.jsx":"28"},{"size":219,"mtime":1608817539578,"results":"29","hashOfConfig":"30"},{"size":2174,"mtime":1609944620005,"results":"31","hashOfConfig":"30"},{"size":1965,"mtime":1609340755232,"results":"32","hashOfConfig":"30"},{"size":1166,"mtime":1609059961459,"results":"33","hashOfConfig":"30"},{"size":1781,"mtime":1609349495020,"results":"34","hashOfConfig":"30"},{"size":2094,"mtime":1608974041435,"results":"35","hashOfConfig":"30"},{"size":2780,"mtime":1609948279011,"results":"36","hashOfConfig":"30"},{"size":1798,"mtime":1609949198049,"results":"37","hashOfConfig":"30"},{"size":638,"mtime":1609265774145,"results":"38","hashOfConfig":"30"},{"size":1368,"mtime":1609947956303,"results":"39","hashOfConfig":"30"},{"size":419,"mtime":1609948814274,"results":"40","hashOfConfig":"30"},{"size":1120,"mtime":1609949162754,"results":"41","hashOfConfig":"30"},{"size":609,"mtime":1609268288699,"results":"42","hashOfConfig":"30"},{"size":514,"mtime":1609251717053,"results":"43","hashOfConfig":"30"},{"size":9918,"mtime":1609492250343,"results":"44","hashOfConfig":"30"},{"size":6184,"mtime":1609492412128,"results":"45","hashOfConfig":"30"},{"size":4192,"mtime":1609318865569,"results":"46","hashOfConfig":"30"},{"size":5202,"mtime":1609268040507,"results":"47","hashOfConfig":"30"},{"size":1492,"mtime":1609238748482,"results":"48","hashOfConfig":"30"},{"size":3325,"mtime":1609318793987,"results":"49","hashOfConfig":"30"},{"size":3324,"mtime":1609256002419,"results":"50","hashOfConfig":"30"},{"size":3356,"mtime":1609318642274,"results":"51","hashOfConfig":"30"},{"size":404,"mtime":1609257960599,"results":"52","hashOfConfig":"30"},{"size":6554,"mtime":1609318773877,"results":"53","hashOfConfig":"30"},{"size":3918,"mtime":1609318734804,"results":"54","hashOfConfig":"30"},{"size":4581,"mtime":1609318884443,"results":"55","hashOfConfig":"30"},{"size":346,"mtime":1609318573189,"results":"56","hashOfConfig":"30"},{"size":10099,"mtime":1609929425695,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"ri3n4p",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\express-project\\readers_club_react\\src\\index.js",[],["129","130"],"C:\\express-project\\readers_club_react\\src\\App.js",["131","132"],"C:\\express-project\\readers_club_react\\src\\components\\auth\\Login.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\services\\UserService.jsx",["133","134"],"import jwtDecode from \"jwt-decode\";\r\nimport GenericService from \"./GenericService\";\r\n\r\nclass UserService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  login = (email, password) =>\r\n    new Promise((resolve, reject) => {\r\n      this.post(\"/users/login\", { email, password })\r\n        .then((token) => {\r\n          localStorage.setItem(\"token\", token);\r\n          resolve(token);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  register = (name, email, password) =>\r\n    this.post(\"/users/register\", { name, email, password });\r\n  logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  isLoggedIn = () => {\r\n    return localStorage.getItem(\"token\") ? true : false;\r\n  };\r\n\r\n  getLoggedInUser = () => {\r\n    try {\r\n      const jwt = localStorage.getItem(\"token\");\r\n      return jwtDecode(jwt);\r\n    } catch (ex) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  isAdmin = () => {\r\n    if (this.isLoggedIn()) {\r\n      if (this.getLoggedInUser().role == \"admin\") return true;\r\n      else return false;\r\n    } else return false;\r\n  };\r\n}\r\nlet userService = new UserService();\r\nexport default userService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\services\\GenericService.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\auth\\Register.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\LandingPage.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ImageSlider.jsx",["135","136"],"C:\\express-project\\readers_club_react\\src\\components\\services\\NovelService.jsx",["137"],"import GenericService from \"./GenericService\";\r\n\r\nclass NovelService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getNovel = () => this.get(\"/api/novels\");\r\n  getSingleNovel = (id) => this.get(\"/api/novels/\" + id);\r\n  addNovel = (formData, config) =>\r\n    this.postData(\"/api/novels\", formData, config);\r\n  deleteNovel = (_id) => this.delete(\"/api/novels/delete/\" + _id);\r\n  updateNovel = (_id, formData, config) =>\r\n    this.putData(\"/api/novels/update/\" + _id, formData, config);\r\n  getStories = () => this.get(\"/api/novels/mystories\");\r\n}\r\n\r\nlet novelService = new NovelService();\r\nexport default novelService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\imageSlider\\ItemsSlider.jsx",["138"],"C:\\express-project\\readers_club_react\\src\\components\\TextHeading.jsx",["139"],"C:\\express-project\\readers_club_react\\src\\components\\Footer.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\services\\ChapterService.jsx",["140"],"import GenericService from \"./GenericService\";\r\n\r\nclass ChapterService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getChapter = () => this.get(\"/api/chapters\");\r\n  getSingleChapter = (id) => this.get(\"/api/chapters/\" + id);\r\n  addChapter = (formData, config) =>\r\n    this.postData(\"/api/chapters\", formData, config);\r\n  deleteChapter = (_id) => this.delete(\"/api/chapters/delete/\" + _id);\r\n  updateChapter = (_id, formData, config) =>\r\n    this.putData(\"/api/chapters/update/\" + _id, formData, config);\r\n}\r\n\r\nlet chapterService = new ChapterService();\r\nexport default chapterService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\services\\GenreService.jsx",["141"],"import GenericService from \"./GenericService\";\r\n\r\nclass GenreService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getGenre = () => this.get(\"/api/genre\");\r\n  getSingleGenre = (name) => this.get(\"/api/genre/\" + name);\r\n  addGenre = (data) => this.post(\"/api/genre\", data);\r\n  deleteGenre = (_id) => this.delete(\"/api/genre/delete/\" + _id);\r\n  updateGenre = (_id, data) => this.put(\"/api/genre/update/\" + _id, data);\r\n}\r\n\r\nlet genreService = new GenreService();\r\nexport default genreService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\SingleNovel.jsx",["142","143","144","145","146","147"],"import {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport novelService from \"../../services/NovelService\";\r\nimport userService from \"../../services/UserService\";\r\nimport chapterService from \"../../services/ChapterService\";\r\nimport Chapters from \"../chapters/Chapters\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport libraryService from \"../../services/LibraryService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaWindows } from \"react-icons/fa\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst SingleNovel = (props) => {\r\n  const [novel, setNovel] = useState([]);\r\n  const [user_info, setUserInfo] = useState([]);\r\n  const [chapters, setChapters] = useState([]);\r\n  const [library, setLibrary] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [trigger, setTrigger] = useState(false);\r\n\r\n  const id = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    novelService\r\n      .getSingleNovel(id)\r\n      .then((data) => {\r\n        setNovel(data.novel);\r\n        setUserInfo(data.user_info);\r\n        setChapters(data.chapters);\r\n        setLibrary(data.library);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [trigger]);\r\n\r\n  return (\r\n    <Auth>\r\n      <div>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={10000} //10 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <>\r\n            <Grid container spacing={2} style={{ marginTop: \"30px\" }}>\r\n              <Grid item xs={1}></Grid>\r\n              <Grid item md={11} lg={3}>\r\n                <img\r\n                  className=\"image3\"\r\n                  width=\"300px\"\r\n                  height=\"400px\"\r\n                  src={novel.image}\r\n                  alt=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={11} lg={7}>\r\n                Name <strong>{novel.name}</strong>\r\n                <br />\r\n                <br />\r\n                Genre <strong>{novel.genre}</strong>\r\n                <br />\r\n                <br />\r\n                Written by <strong>{user_info.name}</strong>\r\n                <hr style={{ marginTop: \"30px\" }} />\r\n                <br />\r\n                <br />\r\n                <Typography variant=\"h5\">Theme of the story</Typography>\r\n                <Typography variant=\"body2\" style={{ marginTop: \"15px\" }}>\r\n                  {novel.theme}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            {userService.isLoggedIn() && (\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={1}></Grid>\r\n                <Grid item xs={5}>\r\n                  {!chapters.length == 0 && (\r\n                    <Button\r\n                      style={{\r\n                        marginTop: \"30px\",\r\n                        marginRight: \"20px\",\r\n                        backgroundColor: \"darkorange\",\r\n                        color: \"white\",\r\n                      }}\r\n                      variant=\"contained\"\r\n                      onClick={(e) => {\r\n                        chapterService\r\n                          .getSingleChapter(chapters[0]._id)\r\n                          .then((data) => {\r\n                            console.log(data);\r\n                            props.history.push(\"/chapter/\" + data.chapter._id);\r\n                          })\r\n                          .catch((err) => {\r\n                            console.log(err);\r\n                          });\r\n                      }}\r\n                    >\r\n                      Read Now\r\n                    </Button>\r\n                  )}\r\n                  {!library.length == 0 ? (\r\n                    <Button\r\n                      style={{ marginTop: \"30px\" }}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={(e) => {\r\n                        libraryService\r\n                          .deleteLibrary(novel._id)\r\n                          .then((data) => {\r\n                            console.log(data);\r\n                            toast.info(\"Removed From Library\", {\r\n                              position: toast.POSITION.TOP_CENTER,\r\n                            });\r\n                            window.location.reload();\r\n                          })\r\n                          .catch((err) => {\r\n                            console.log(err);\r\n                          });\r\n                        setTrigger(false);\r\n                      }}\r\n                    >\r\n                      Remove From Library\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      style={{ marginTop: \"30px\" }}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={(e) => {\r\n                        console.log(novel._id);\r\n                        libraryService\r\n                          .addLibrary(novel)\r\n                          .then((data) => {\r\n                            console.log(data);\r\n                            toast.info(\"Added To Library\", {\r\n                              position: toast.POSITION.TOP_CENTER,\r\n                            });\r\n                            window.location.reload();\r\n                          })\r\n                          .catch((err) => {\r\n                            console.log(err);\r\n                          });\r\n                        setTrigger(true);\r\n                      }}\r\n                    >\r\n                      Add To Library\r\n                    </Button>\r\n                  )}\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  {novel.user_id == userService.getLoggedInUser()._id && (\r\n                    <>\r\n                      <Button\r\n                        style={{\r\n                          marginTop: \"30px\",\r\n                          backgroundColor: \"goldenrod\",\r\n                          color: \"white\",\r\n                          marginRight: \"10px\",\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={(e) => {\r\n                          props.history.push(\"/novels/update/\" + novel._id);\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        style={{\r\n                          marginTop: \"30px\",\r\n                          backgroundColor: \"indianred\",\r\n                          color: \"white\",\r\n                          marginRight: \"10px\",\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={(e) => {\r\n                          setLoader(true);\r\n                          novelService\r\n                            .deleteNovel(novel._id)\r\n                            .then((data) => {\r\n                              console.log(data);\r\n                              setLoader(false);\r\n\r\n                              props.history.push(\"/\");\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                      <Button\r\n                        style={{\r\n                          marginTop: \"30px\",\r\n                          backgroundColor: \"mediumvioletred\",\r\n                          color: \"white\",\r\n                          marginRight: \"10px\",\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={(e) => {\r\n                          props.history.push(\"/new/chapter/\" + novel._id);\r\n                        }}\r\n                      >\r\n                        Add New Chapter\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <Divider style={{ marginTop: \"50px\", marginBottom: \"20px\" }} />\r\n            {!chapters.length == 0 ? (\r\n              <>\r\n                <Grid container spacing={4}>\r\n                  <Grid item xs={5}></Grid>\r\n                  <Grid item xs={4}>\r\n                    <h2>TABLE OF CONTENTS</h2>\r\n                  </Grid>\r\n                  <Grid item xs={3}></Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={4}></Grid>\r\n                  <Grid item xs={8}>\r\n                    <Chapters chapters={chapters} />\r\n                  </Grid>\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              <p\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: \"20px\",\r\n                  marginTop: \"40px\",\r\n                }}\r\n              >\r\n                <strong>This story does not have any chapters yet!</strong>\r\n              </p>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default SingleNovel;\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\NewStory.jsx",["148","149","150","151"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport userService from \"../../services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\nimport genreService from \"../../services/GenreService\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport novelService from \"../../services/NovelService\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"500px\",\r\n  },\r\n  child: {\r\n    width: \"600px\",\r\n  },\r\n}));\r\n\r\nconst NewStory = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [theme, setTheme] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [genre, setGenre] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    genreService\r\n      .getGenre()\r\n      .then((data) => {\r\n        setGenre(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  console.log(selectedGenre);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(selectedGenre);\r\n    if (!selectedGenre == \"\") {\r\n      setLoader(true);\r\n      const formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"genre\", selectedGenre);\r\n      formData.append(\"theme\", theme);\r\n      formData.append(\"image\", file);\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      novelService\r\n        .addNovel(formData, config)\r\n        .then((data) => {\r\n          console.log(data);\r\n          setLoader(false);\r\n          props.history.push(\"/new/chapter/\" + data.novel._id);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      toast.error(\"Select Genre!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Auth>\r\n      <div className={classes.container}>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={6000} //6 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <div className={classes.child}>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"title\"\r\n                fullWidth\r\n                required\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                placeholder=\"Give a name to your story\"\r\n              />{\" \"}\r\n              <br />\r\n              <Button\r\n                style={{ marginTop: \"10px\" }}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                {selectedGenre ? selectedGenre : \"Choose genre\"}\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                required\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                fullWidth\r\n              >\r\n                {genre.map((item, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <MenuItem\r\n                        required\r\n                        width=\"100%\"\r\n                        onClick={(e) => {\r\n                          setSelectedGenre(item.name);\r\n                          handleClose();\r\n                        }}\r\n                      >\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Menu>\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Theme\"\r\n                required\r\n                multiline\r\n                rows={12}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter theme of your story\"\r\n                onChange={(e) => {\r\n                  setTheme(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <input\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setFile(e.target.files[0]);\r\n                }}\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default withRouter(NewStory);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\NewChapter.jsx",["152"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport userService from \"../../services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport chapterService from \"../../services/ChapterService\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"500px\",\r\n  },\r\n  child: {\r\n    width: \"600px\",\r\n  },\r\n}));\r\n\r\nconst NewChapter = (props) => {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n  const id = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    toast.info(\"Add a new chapter\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n    });\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    const formData = new FormData();\r\n    formData.append(\"novel_id\", id);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"image\", file);\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    chapterService\r\n      .addChapter(formData, config)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setLoader(false);\r\n        props.history.push(\"/novels/\" + id);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Auth>\r\n      <div className={classes.container}>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={6000} //6 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <div className={classes.child}>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"title\"\r\n                fullWidth\r\n                required\r\n                value={title}\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n                placeholder=\"Give a title of your Chapter\"\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Content\"\r\n                required\r\n                multiline\r\n                rows={12}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter content of your chapter\"\r\n                onChange={(e) => {\r\n                  setContent(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <input\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setFile(e.target.files[0]);\r\n                }}\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default withRouter(NewChapter);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\SingleChapter.jsx",["153","154","155","156"],"import {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport chapterService from \"../../services/ChapterService\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport userService from \"../../services/UserService\";\r\nimport Chapters from \"./Chapters\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SingleChapter = (props) => {\r\n  const id = props.match.params.id;\r\n  const [chapter, setChapter] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    chapterService\r\n      .getSingleChapter(id)\r\n      .then((data) => {\r\n        setChapter(data.chapter);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loader ? (\r\n        <Container maxWidth=\"lg\">\r\n          <Grid container spacing={3}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"10%\",\r\n                marginBottom: \"20%\",\r\n              }}\r\n            >\r\n              <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={6000} //6 secs\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      ) : (\r\n        <>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={4}></Grid>\r\n            <Grid\r\n              item\r\n              xs={4}\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n              {chapter.user_id[0] == userService.getLoggedInUser()._id && (\r\n                <>\r\n                  <Button\r\n                    style={{\r\n                      marginTop: \"30px\",\r\n                      backgroundColor: \"goldenrod\",\r\n                      color: \"white\",\r\n                      marginRight: \"10px\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    onClick={(e) => {\r\n                      props.history.push(\"/chapter/update/\" + chapter._id);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    style={{\r\n                      marginTop: \"30px\",\r\n                      backgroundColor: \"indianred\",\r\n                      color: \"white\",\r\n                      marginRight: \"10px\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    onClick={(e) => {\r\n                      setLoader(true);\r\n                      chapterService\r\n                        .deleteChapter(chapter._id)\r\n                        .then((data) => {\r\n                          console.log(data);\r\n                          setLoader(false);\r\n                          props.history.push(\"/novels/\" + chapter.novel_id[0]);\r\n                        })\r\n                        .catch((err) => {\r\n                          console.log(err);\r\n                        });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={4}></Grid>\r\n          </Grid>\r\n          <Grid container spacing={3} style={{ marginTop: \"30px\" }}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                filter: \"brightness(20%)\",\r\n                opacity: \"0.9\",\r\n              }}\r\n            >\r\n              <img\r\n                className=\"image3\"\r\n                width=\"1280px\"\r\n                height=\"400px\"\r\n                src={chapter.image}\r\n                alt=\"\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant=\"h3\"\r\n                component=\"h4\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  textAlign: \"center\",\r\n                  bottom: \"30%\",\r\n                  width: \"100%\",\r\n                  color: \"whitesmoke\",\r\n\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {chapter.title}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Container\r\n            maxWidth=\"lg\"\r\n            className=\"shadow\"\r\n            style={{\r\n              marginTop: \"40px\",\r\n              padding: \"30px\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"h3\"\r\n              style={{ lineHeight: 1.8, fontSize: \"25px\" }}\r\n            >\r\n              {chapter.content}\r\n            </Typography>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SingleChapter);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\Chapters.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\Genre.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\readers_club\\genres\\GenreSpecificStory.jsx",["157","158","159"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport genreService from \"../../services/GenreService\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n    boxShadow:\r\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.4), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n});\r\nconst GenreSpecificStory = (props) => {\r\n  const [novels, setNovels] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  const genre = props.match.params.name;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    genreService\r\n      .getSingleGenre(genre)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setNovels(data);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loader ? (\r\n        <Container maxWidth=\"lg\">\r\n          <Grid container spacing={3}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"10%\",\r\n                marginBottom: \"20%\",\r\n              }}\r\n            >\r\n              <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={6000} //6 secs\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      ) : (\r\n        <Container maxWidth=\"lg\" style={{ marginTop: \"50px\" }}>\r\n          <Grid container spacing={3}>\r\n            {novels.map((novel, index) => {\r\n              return (\r\n                <Grid item xs={4}>\r\n                  <Card\r\n                    className={classes.root}\r\n                    onClick={(e) => {\r\n                      props.history.push(\"/novels/\" + novel._id);\r\n                    }}\r\n                  >\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        className={classes.media}\r\n                        image={novel.image}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography style={{ height: \"40px\" }}>\r\n                          {novel.name}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                  </Card>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(GenreSpecificStory);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\libraries\\Library.jsx",[],"C:\\express-project\\readers_club_react\\src\\components\\services\\LibraryService.jsx",["160"],"import GenericService from \"./GenericService\";\r\n\r\nclass LibraryService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getLibrary = () => this.get(\"/api/library\");\r\n  addLibrary = (formData) => this.post(\"/api/library\", formData);\r\n  deleteLibrary = (_id) => this.delete(\"/api/library/delete/\" + _id);\r\n}\r\n\r\nlet libraryService = new LibraryService();\r\nexport default libraryService;\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\UpdateStory.jsx",["161","162","163"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport userService from \"../../services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\nimport genreService from \"../../services/GenreService\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport novelService from \"../../services/NovelService\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"500px\",\r\n  },\r\n  child: {\r\n    width: \"600px\",\r\n  },\r\n}));\r\n\r\nconst UpdateStory = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [theme, setTheme] = useState(\"\");\r\n  const [genre, setGenre] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const id = props.match.params.id;\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    genreService\r\n      .getGenre()\r\n      .then((data) => {\r\n        setGenre(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoader(true);\r\n    novelService\r\n      .getSingleNovel(id)\r\n      .then((data) => {\r\n        console.log(data.novel.theme);\r\n        setName(data.novel.name);\r\n        setTheme(data.novel.theme);\r\n        setSelectedGenre(data.novel.genre);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(selectedGenre);\r\n    if (!selectedGenre == \"\") {\r\n      setLoader(true);\r\n      const formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"genre\", selectedGenre);\r\n      formData.append(\"theme\", theme);\r\n      formData.append(\"image\", file);\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      novelService\r\n        .updateNovel(id, formData, config)\r\n        .then((data) => {\r\n          console.log(data);\r\n          setLoader(false);\r\n          props.history.push(\"/novels/\" + id);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      toast.error(\"Select Genre!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Auth>\r\n      <div className={classes.container}>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={6000} //6 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <div className={classes.child}>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"title\"\r\n                fullWidth\r\n                required\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                placeholder=\"Give a name to your story\"\r\n              />{\" \"}\r\n              <br />\r\n              <Button\r\n                style={{ marginTop: \"10px\" }}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                {selectedGenre ? selectedGenre : \"Choose genre\"}\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                required\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                fullWidth\r\n              >\r\n                {genre.map((item, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <MenuItem\r\n                        required\r\n                        width=\"100%\"\r\n                        onClick={(e) => {\r\n                          setSelectedGenre(item.name);\r\n                          handleClose();\r\n                        }}\r\n                      >\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Menu>\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Theme\"\r\n                required\r\n                multiline\r\n                rows={12}\r\n                fullWidth\r\n                value={theme}\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter theme of your story\"\r\n                onChange={(e) => {\r\n                  setTheme(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <input\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setFile(e.target.files[0]);\r\n                }}\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Update\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default withRouter(UpdateStory);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\stories\\MyStories.jsx",["164","165"],"import React, { useEffect, useState } from \"react\";\r\nimport libraryService from \"../../services/LibraryService\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport novelService from \"../../services/NovelService\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    boxShadow:\r\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.4), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n});\r\nconst MyStories = (props) => {\r\n  const [stories, setStories] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    novelService\r\n      .getStories()\r\n      .then((data) => {\r\n        setStories(data);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  console.log(stories);\r\n  return (\r\n    <Auth>\r\n      <div>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={6000} //6 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <Container maxWidth=\"lg\" style={{ marginTop: \"50px\" }}>\r\n            <Grid container spacing={3}>\r\n              {stories.length != 0 ? (\r\n                <>\r\n                  {stories.map((story, index) => {\r\n                    return (\r\n                      <Grid item xs={4} key={index}>\r\n                        <Card\r\n                          className={classes.root}\r\n                          onClick={(e) => {\r\n                            props.history.push(\"/novels/\" + story._id);\r\n                          }}\r\n                        >\r\n                          <CardActionArea>\r\n                            <CardMedia\r\n                              className={classes.media}\r\n                              image={story.image}\r\n                              title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography style={{ height: \"40px\" }}>\r\n                                {story.name}\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Card>\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n                </>\r\n              ) : (\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    fontSize: \"20px\",\r\n                    marginTop: \"40px\",\r\n                  }}\r\n                >\r\n                  <strong>You have not written any story yet</strong>\r\n                </p>\r\n              )}\r\n            </Grid>\r\n          </Container>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default withRouter(MyStories);\r\n","C:\\express-project\\readers_club_react\\src\\components\\readers_club\\chapters\\UpdateChapter.jsx",["166","167"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport userService from \"../../services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport chapterService from \"../../services/ChapterService\";\r\nimport Auth from \"../../auth/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"500px\",\r\n  },\r\n  child: {\r\n    width: \"600px\",\r\n  },\r\n}));\r\n\r\nconst UpdateChapter = (props) => {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n  const id = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    toast.info(\"Update this chapter\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoader(true);\r\n    chapterService\r\n      .getSingleChapter(id)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setTitle(data.chapter.title);\r\n        setContent(data.chapter.content);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    const formData = new FormData();\r\n    formData.append(\"novel_id\", id);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"image\", file);\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    chapterService\r\n      .updateChapter(id, formData, config)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setLoader(false);\r\n        props.history.push(\"/chapter/\" + id);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Auth>\r\n      <div className={classes.container}>\r\n        {loader ? (\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"10%\",\r\n                  marginBottom: \"20%\",\r\n                }}\r\n              >\r\n                <Loader\r\n                  type=\"ThreeDots\"\r\n                  color=\"#00BFFF\"\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={6000} //6 secs\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        ) : (\r\n          <div className={classes.child}>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"title\"\r\n                fullWidth\r\n                required\r\n                value={title}\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n                placeholder=\"Give a title of your Chapter\"\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Content\"\r\n                required\r\n                multiline\r\n                rows={12}\r\n                fullWidth\r\n                value={content}\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter content of your chapter\"\r\n                onChange={(e) => {\r\n                  setContent(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <input\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setFile(e.target.files[0]);\r\n                }}\r\n              />{\" \"}\r\n              <br />\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Auth>\r\n  );\r\n};\r\n\r\nexport default withRouter(UpdateChapter);\r\n","C:\\express-project\\readers_club_react\\src\\components\\auth\\Auth.jsx",["168"],"import React from \"react\";\r\nimport userService from \"../services/UserService\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Auth = (props) => {\r\n  React.useEffect(() => {\r\n    if (!userService.isLoggedIn()) {\r\n      props.history.push(\"/login\");\r\n    }\r\n  }, []);\r\n  return <>{props.children}</>;\r\n};\r\n\r\nexport default withRouter(Auth);\r\n","C:\\express-project\\readers_club_react\\src\\components\\Nav1.jsx",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":4,"column":3,"nodeType":"175","messageId":"176","endLine":4,"endColumn":11},{"ruleId":"173","severity":1,"message":"177","line":9,"column":26,"nodeType":"175","messageId":"176","endLine":9,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":5,"column":3,"nodeType":"180","messageId":"181","endLine":7,"endColumn":4},{"ruleId":"182","severity":1,"message":"183","line":42,"column":39,"nodeType":"184","messageId":"185","endLine":42,"endColumn":41},{"ruleId":"173","severity":1,"message":"186","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":39,"column":19,"nodeType":"189","endLine":46,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":4,"column":3,"nodeType":"180","messageId":"181","endLine":6,"endColumn":4},{"ruleId":"190","severity":1,"message":"191","line":28,"column":17,"nodeType":"189","endLine":35,"endColumn":19},{"ruleId":"173","severity":1,"message":"192","line":1,"column":21,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"179","line":4,"column":3,"nodeType":"180","messageId":"181","endLine":6,"endColumn":4},{"ruleId":"178","severity":1,"message":"179","line":4,"column":3,"nodeType":"180","messageId":"181","endLine":6,"endColumn":4},{"ruleId":"173","severity":1,"message":"193","line":17,"column":10,"nodeType":"175","messageId":"176","endLine":17,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":43,"column":6,"nodeType":"196","endLine":43,"endColumn":15,"suggestions":"197"},{"ruleId":"182","severity":1,"message":"183","line":106,"column":37,"nodeType":"184","messageId":"185","endLine":106,"endColumn":39},{"ruleId":"182","severity":1,"message":"183","line":130,"column":36,"nodeType":"184","messageId":"185","endLine":130,"endColumn":38},{"ruleId":"182","severity":1,"message":"183","line":181,"column":34,"nodeType":"184","messageId":"185","endLine":181,"endColumn":36},{"ruleId":"182","severity":1,"message":"183","line":244,"column":31,"nodeType":"184","messageId":"185","endLine":244,"endColumn":33},{"ruleId":"173","severity":1,"message":"198","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":19},{"ruleId":"173","severity":1,"message":"199","line":32,"column":10,"nodeType":"175","messageId":"176","endLine":32,"endColumn":18},{"ruleId":"173","severity":1,"message":"200","line":32,"column":20,"nodeType":"175","messageId":"176","endLine":32,"endColumn":31},{"ruleId":"182","severity":1,"message":"183","line":60,"column":24,"nodeType":"184","messageId":"185","endLine":60,"endColumn":26},{"ruleId":"173","severity":1,"message":"198","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":19},{"ruleId":"173","severity":1,"message":"201","line":4,"column":3,"nodeType":"175","messageId":"176","endLine":4,"endColumn":10},{"ruleId":"173","severity":1,"message":"202","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":31,"column":6,"nodeType":"196","endLine":31,"endColumn":8,"suggestions":"203"},{"ruleId":"182","severity":1,"message":"183","line":67,"column":35,"nodeType":"184","messageId":"185","endLine":67,"endColumn":37},{"ruleId":"173","severity":1,"message":"204","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":19},{"ruleId":"173","severity":1,"message":"205","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":14},{"ruleId":"194","severity":1,"message":"206","line":46,"column":6,"nodeType":"196","endLine":46,"endColumn":8,"suggestions":"207"},{"ruleId":"178","severity":1,"message":"179","line":4,"column":3,"nodeType":"180","messageId":"181","endLine":6,"endColumn":4},{"ruleId":"173","severity":1,"message":"198","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":70,"column":6,"nodeType":"196","endLine":70,"endColumn":8,"suggestions":"208"},{"ruleId":"182","severity":1,"message":"183","line":75,"column":24,"nodeType":"184","messageId":"185","endLine":75,"endColumn":26},{"ruleId":"173","severity":1,"message":"209","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":22},{"ruleId":"182","severity":1,"message":"210","line":75,"column":31,"nodeType":"184","messageId":"185","endLine":75,"endColumn":33},{"ruleId":"173","severity":1,"message":"198","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":52,"column":6,"nodeType":"196","endLine":52,"endColumn":8,"suggestions":"211"},{"ruleId":"194","severity":1,"message":"212","line":10,"column":6,"nodeType":"196","endLine":10,"endColumn":8,"suggestions":"213"},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Grid' is defined but never used.","'FaWindows' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["216"],"'userService' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'Divider' is defined but never used.","'Chapters' is defined but never used.",["217"],"'CardActions' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'genre'. Either include it or remove the dependency array.",["218"],["219"],"'libraryService' is defined but never used.","Expected '!==' and instead saw '!='.",["220"],"React Hook React.useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["221"],"no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"224","fix":"228"},{"desc":"224","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [id, trigger]",{"range":"232","text":"233"},"Update the dependencies array to be: [id]",{"range":"234","text":"235"},"Update the dependencies array to be: [genre]",{"range":"236","text":"237"},{"range":"238","text":"235"},{"range":"239","text":"235"},"Update the dependencies array to be: [props.history]",{"range":"240","text":"241"},[1373,1382],"[id, trigger]",[876,878],"[id]",[1459,1461],"[genre]",[2032,2034],[1504,1506],[267,269],"[props.history]"]